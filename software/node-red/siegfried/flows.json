[
    {
        "id": "a7233230404c3289",
        "type": "tab",
        "label": "Hardware Layer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "78b28997a4d07be2",
        "type": "tab",
        "label": "Fridge",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "threshold",
                "value": "1000",
                "type": "str"
            }
        ]
    },
    {
        "id": "274cb03b3db2d71a",
        "type": "tab",
        "label": "Temperature",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "493e4b0fcbc7484f",
        "type": "tab",
        "label": "MPPT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5a08a5132887b1a2",
        "type": "tab",
        "label": "SOC",
        "disabled": false,
        "info": ""
    },
    {
        "id": "162cea04a51a0717",
        "type": "tab",
        "label": "Busses",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "201ad97e962a1d7d",
        "type": "tab",
        "label": "Advanced",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d36037ce242039a2",
        "type": "tab",
        "label": "Analytics",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b57434cd3c37a84c",
        "type": "subflow",
        "name": "Fridge control",
        "info": "# Description\n\n## input parameters:\n- msg.payload --> true == turn on fridge\n-             --> false== turn off fridge\n- msg.switch_to_lfp --> true == power source is LFP battery\n-                   --> false == power source is Lead battery",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 180,
                "wires": [
                    {
                        "id": "8dec80308fb9d60e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1910,
                "y": 180,
                "wires": [
                    {
                        "id": "64eeaf8b23c966c6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "85860d2069ad95cd",
        "type": "subflow",
        "name": "Charger Control",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "eb94063d41bc944d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1530,
                "y": 180,
                "wires": [
                    {
                        "id": "2ca40f854aa53bc4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "bec2118860bb84ba",
        "type": "subflow",
        "name": "ovveride",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 160,
                "wires": [
                    {
                        "id": "2ca9afd17404e819"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1300,
                "y": 200,
                "wires": [
                    {
                        "id": "b2bbb41eaf92958d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "threshold",
                "type": "num",
                "value": "1000"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "d8f3724deb76e0db",
        "type": "subflow",
        "name": "Get settings",
        "info": "# Input:\n## payload: name of the setting to retrieve\n\n# output\n## payload: value of the setting from db\n## topic: name of the setting\n",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "9a9241d78a196ff1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 80,
                "wires": [
                    {
                        "id": "81760f68e8cb2a1a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "82d2585d0faf6449",
        "type": "group",
        "z": "162cea04a51a0717",
        "name": "Get Lead Voltage with ADC over I2C",
        "style": {
            "label": true
        },
        "nodes": [
            "e8ee218f560979f9",
            "8662c0be2162570d",
            "f116d819f70f44ad",
            "7b31379d00b72044",
            "5b9b5fcfd20a8b61",
            "c4fd34b18b94f58f",
            "7ee5db236074879f"
        ],
        "x": 34,
        "y": 59,
        "w": 1062,
        "h": 142
    },
    {
        "id": "89fde2b35b7808f9",
        "type": "group",
        "z": "162cea04a51a0717",
        "name": "Read temperarute Sensors over 1-Wire",
        "style": {
            "label": true
        },
        "nodes": [
            "af0b15bc328342de",
            "246f9284dfd1ad8d",
            "46dc15df4d9a5c02",
            "7ea715a1a228e19a",
            "bdbb7a73a45acc1c",
            "c180da56bb6e9ad8",
            "363958c7eec04849",
            "3e673c5e24ef0a0b",
            "d5118342f3420f54",
            "0ff4e0486b9844cb",
            "a9e006439192e826",
            "60fe06549654d7a9",
            "a61d76de1277b5b9",
            "91a6e4a881bc9e5e",
            "f5f9bfed5aa3fbcd"
        ],
        "x": 34,
        "y": 279,
        "w": 1012,
        "h": 162
    },
    {
        "id": "82e7dfd030bb8d2f",
        "type": "group",
        "z": "493e4b0fcbc7484f",
        "name": "MPPT Broadcast",
        "style": {
            "label": true
        },
        "nodes": [
            "bf2fda8594cf902e",
            "e24b696b89968d8e",
            "e171066b96771584",
            "c7393f8c922a362c",
            "7de9060fb16a3dc2",
            "f24e3ce3c78010f2",
            "cd7be1f40dda90df"
        ],
        "x": 14,
        "y": 19,
        "w": 1132,
        "h": 162
    },
    {
        "id": "232f2c028585f7b9",
        "type": "group",
        "z": "493e4b0fcbc7484f",
        "name": "Dashboard",
        "style": {
            "label": true
        },
        "nodes": [
            "5b49d8929650b679",
            "fe1234361f9f4bde",
            "1874703f19edaf5a",
            "503c12d16819e9da",
            "e7286d0da156bdcf",
            "928b3a38f03c176e",
            "a4d932bcecd17514",
            "be41a7f828962f8c",
            "2ec5374cc7d45626",
            "bde5457bae4472d5",
            "3b63ad5a137efd38",
            "27dff5e8f07846b1",
            "a408cdad7701296b",
            "c2df51ef9125b574",
            "68c85cf9d66453b2"
        ],
        "x": 1314,
        "y": 19,
        "w": 412,
        "h": 282
    },
    {
        "id": "a74bb25de5c78e26",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "icon",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 44,
                "sy": 46,
                "gx": 6,
                "gy": 4,
                "cx": 6,
                "cy": 0,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8d207109f202f502",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6c304982dc7231d9",
        "type": "ui_group",
        "name": "Fridge",
        "tab": "8d207109f202f502",
        "order": 4,
        "disp": false,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "72a8d1b89999131f",
        "type": "ui_group",
        "name": "MPPT",
        "tab": "8d207109f202f502",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "594a8a527370c352",
        "type": "serial-port",
        "serialport": "/dev/ttyS0",
        "serialbaud": "19200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "bin",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "7ac90561cb0ad481",
        "type": "ui_group",
        "name": "Serial COM",
        "tab": "e1343744e4d74a0b",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9accbd4c3bdcd845",
        "type": "MySQLdatabase",
        "name": "database",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "siegfried",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "7dbe224d7e5b35ba",
        "type": "ui_group",
        "name": "SOC",
        "tab": "8d207109f202f502",
        "order": 3,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "83e9ca27a8b9a1f0",
        "type": "ui_group",
        "name": "Overview",
        "tab": "e1343744e4d74a0b",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e1343744e4d74a0b",
        "type": "ui_tab",
        "name": "Advanced",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7fbe76992a0ffcb4",
        "type": "ui_group",
        "name": "Testing",
        "tab": "e1343744e4d74a0b",
        "order": 3,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4686ecb1bb0645fb",
        "type": "ui_tab",
        "name": "Analytics",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "80e6c085ce995358",
        "type": "ui_group",
        "name": "test analytics",
        "tab": "4686ecb1bb0645fb",
        "order": 1,
        "disp": true,
        "width": "21",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4c88ce79aeb1c97e",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "8d207109f202f502",
        "order": 1,
        "disp": false,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8ccf1fb7e0607deb",
        "type": "ui_group",
        "name": "Water",
        "tab": "8d207109f202f502",
        "order": 5,
        "disp": false,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2a0e25e8b5c0b682",
        "type": "delay",
        "z": "b57434cd3c37a84c",
        "name": "delay 500ms",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 630,
        "y": 80,
        "wires": [
            [
                "aaed5477d8b9ded9",
                "cfe7e080e23cf834"
            ]
        ]
    },
    {
        "id": "aaed5477d8b9ded9",
        "type": "delay",
        "z": "b57434cd3c37a84c",
        "name": "5sec delay",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 830,
        "y": 80,
        "wires": [
            [
                "a5119d3e26d47f7c",
                "4c32cc655c44f777"
            ]
        ]
    },
    {
        "id": "959c962e1b102307",
        "type": "link out",
        "z": "b57434cd3c37a84c",
        "name": "fridge",
        "mode": "link",
        "links": [
            "64eeaf8b23c966c6"
        ],
        "x": 1225,
        "y": 120,
        "wires": []
    },
    {
        "id": "a5119d3e26d47f7c",
        "type": "delay",
        "z": "b57434cd3c37a84c",
        "name": "15sec delay",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1090,
        "y": 80,
        "wires": [
            [
                "84a60301cf1f1d3a"
            ]
        ]
    },
    {
        "id": "ea3ede14575d258e",
        "type": "link out",
        "z": "b57434cd3c37a84c",
        "name": "power source",
        "mode": "link",
        "links": [
            "64eeaf8b23c966c6"
        ],
        "x": 1745,
        "y": 120,
        "wires": []
    },
    {
        "id": "383d47a1cd09287f",
        "type": "change",
        "z": "b57434cd3c37a84c",
        "name": "switch power source to Lead",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lead_battery",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "battery_select",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "2a0e25e8b5c0b682",
                "c0d487f8f3afef97"
            ]
        ]
    },
    {
        "id": "cfe7e080e23cf834",
        "type": "change",
        "z": "b57434cd3c37a84c",
        "name": "turn on inverter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "inverter",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 120,
        "wires": [
            [
                "35ae32fd6fdfa33c"
            ]
        ]
    },
    {
        "id": "4c32cc655c44f777",
        "type": "change",
        "z": "b57434cd3c37a84c",
        "name": "turn on fridge",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fridge",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 120,
        "wires": [
            [
                "959c962e1b102307"
            ]
        ]
    },
    {
        "id": "504642d8cd7a45ad",
        "type": "change",
        "z": "b57434cd3c37a84c",
        "name": "switch power source to LFP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lfp_battery",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "battery_select",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 120,
        "wires": [
            [
                "ea3ede14575d258e"
            ]
        ]
    },
    {
        "id": "84a60301cf1f1d3a",
        "type": "switch",
        "z": "b57434cd3c37a84c",
        "name": "check source",
        "property": "switch_to_lfp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1340,
        "y": 80,
        "wires": [
            [
                "504642d8cd7a45ad"
            ]
        ]
    },
    {
        "id": "35bdfe86887d125b",
        "type": "link out",
        "z": "b57434cd3c37a84c",
        "name": "fridge",
        "mode": "link",
        "links": [
            "64eeaf8b23c966c6"
        ],
        "x": 575,
        "y": 240,
        "wires": []
    },
    {
        "id": "177a13287c18fa73",
        "type": "delay",
        "z": "b57434cd3c37a84c",
        "name": "500ms delay",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 630,
        "y": 200,
        "wires": [
            [
                "415d23ce76b92d99",
                "d9f56c0796d37e27"
            ]
        ]
    },
    {
        "id": "b1789de65b4843f7",
        "type": "link out",
        "z": "b57434cd3c37a84c",
        "name": "power source",
        "mode": "link",
        "links": [
            "64eeaf8b23c966c6"
        ],
        "x": 1305,
        "y": 240,
        "wires": []
    },
    {
        "id": "a00b985e672eb268",
        "type": "change",
        "z": "b57434cd3c37a84c",
        "name": "turn off fridge",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fridge",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            [
                "35bdfe86887d125b",
                "177a13287c18fa73"
            ]
        ]
    },
    {
        "id": "415d23ce76b92d99",
        "type": "change",
        "z": "b57434cd3c37a84c",
        "name": "turn off inverter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "inverter",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 240,
        "wires": [
            [
                "173b6bc492561a20"
            ]
        ]
    },
    {
        "id": "ed97960bc9bcbfb4",
        "type": "change",
        "z": "b57434cd3c37a84c",
        "name": "switch power source to LFP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lfp_battery",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "battery_select",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 240,
        "wires": [
            [
                "b1789de65b4843f7"
            ]
        ]
    },
    {
        "id": "d9f56c0796d37e27",
        "type": "delay",
        "z": "b57434cd3c37a84c",
        "name": "500ms delay",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 830,
        "y": 200,
        "wires": [
            [
                "ed97960bc9bcbfb4"
            ]
        ]
    },
    {
        "id": "8dec80308fb9d60e",
        "type": "switch",
        "z": "b57434cd3c37a84c",
        "name": "ON / OFF",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 160,
        "y": 180,
        "wires": [
            [
                "383d47a1cd09287f"
            ],
            [
                "a00b985e672eb268"
            ]
        ]
    },
    {
        "id": "173b6bc492561a20",
        "type": "link out",
        "z": "b57434cd3c37a84c",
        "name": "inverter",
        "mode": "link",
        "links": [
            "64eeaf8b23c966c6"
        ],
        "x": 965,
        "y": 240,
        "wires": []
    },
    {
        "id": "35ae32fd6fdfa33c",
        "type": "link out",
        "z": "b57434cd3c37a84c",
        "name": "inverter",
        "mode": "link",
        "links": [
            "64eeaf8b23c966c6"
        ],
        "x": 965,
        "y": 120,
        "wires": []
    },
    {
        "id": "c0d487f8f3afef97",
        "type": "link out",
        "z": "b57434cd3c37a84c",
        "name": "power source",
        "mode": "link",
        "links": [
            "64eeaf8b23c966c6"
        ],
        "x": 575,
        "y": 120,
        "wires": []
    },
    {
        "id": "64eeaf8b23c966c6",
        "type": "link in",
        "z": "b57434cd3c37a84c",
        "name": "Hardware output",
        "links": [
            "173b6bc492561a20",
            "35ae32fd6fdfa33c",
            "35bdfe86887d125b",
            "959c962e1b102307",
            "b1789de65b4843f7",
            "c0d487f8f3afef97",
            "ea3ede14575d258e"
        ],
        "x": 1835,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "119859a577954569",
        "type": "comment",
        "z": "b57434cd3c37a84c",
        "name": "OFF",
        "info": "",
        "x": 150,
        "y": 240,
        "wires": []
    },
    {
        "id": "9e79a0e52adcfbce",
        "type": "comment",
        "z": "b57434cd3c37a84c",
        "name": "ON",
        "info": "",
        "x": 150,
        "y": 120,
        "wires": []
    },
    {
        "id": "3f11446ab0ac521c",
        "type": "delay",
        "z": "85860d2069ad95cd",
        "name": "delay 500ms",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 670,
        "y": 80,
        "wires": [
            [
                "7ec654bf58226704",
                "29846167b217dff6"
            ]
        ]
    },
    {
        "id": "7ec654bf58226704",
        "type": "delay",
        "z": "85860d2069ad95cd",
        "name": "1sec delay",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 870,
        "y": 80,
        "wires": [
            [
                "f2db65cdf6e9218c"
            ]
        ]
    },
    {
        "id": "c2dfc55fe818d2d3",
        "type": "link out",
        "z": "85860d2069ad95cd",
        "name": "fridge",
        "mode": "link",
        "links": [
            "2ca40f854aa53bc4"
        ],
        "x": 1265,
        "y": 120,
        "wires": []
    },
    {
        "id": "4a5b49ec6b0b88c8",
        "type": "change",
        "z": "85860d2069ad95cd",
        "name": "switch power source to Lead",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lead_battery",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "battery_select",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 120,
        "wires": [
            [
                "3f11446ab0ac521c",
                "5d78525fcec731ec"
            ]
        ]
    },
    {
        "id": "29846167b217dff6",
        "type": "change",
        "z": "85860d2069ad95cd",
        "name": "turn on inverter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "inverter",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 120,
        "wires": [
            [
                "5d77338698d792a2"
            ]
        ]
    },
    {
        "id": "f2db65cdf6e9218c",
        "type": "change",
        "z": "85860d2069ad95cd",
        "name": "turn on charger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "charger",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 120,
        "wires": [
            [
                "c2dfc55fe818d2d3"
            ]
        ]
    },
    {
        "id": "e7c6ee8b7d92b0ef",
        "type": "link out",
        "z": "85860d2069ad95cd",
        "name": "fridge",
        "mode": "link",
        "links": [
            "2ca40f854aa53bc4"
        ],
        "x": 615,
        "y": 240,
        "wires": []
    },
    {
        "id": "f4a802d2c1617c67",
        "type": "delay",
        "z": "85860d2069ad95cd",
        "name": "500ms delay",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 670,
        "y": 200,
        "wires": [
            [
                "fc7b60240458cd60",
                "41b1eeafb3de5f7f"
            ]
        ]
    },
    {
        "id": "8727b486fc8278ab",
        "type": "link out",
        "z": "85860d2069ad95cd",
        "name": "power source",
        "mode": "link",
        "links": [
            "2ca40f854aa53bc4"
        ],
        "x": 1345,
        "y": 240,
        "wires": []
    },
    {
        "id": "2cd36db492e9b42c",
        "type": "change",
        "z": "85860d2069ad95cd",
        "name": "turn off charger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "charger",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 240,
        "wires": [
            [
                "e7c6ee8b7d92b0ef",
                "f4a802d2c1617c67"
            ]
        ]
    },
    {
        "id": "fc7b60240458cd60",
        "type": "change",
        "z": "85860d2069ad95cd",
        "name": "turn off inverter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "inverter",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 240,
        "wires": [
            [
                "3774778b55522af7"
            ]
        ]
    },
    {
        "id": "9a6ab8bb45491ff0",
        "type": "change",
        "z": "85860d2069ad95cd",
        "name": "switch power source to LFP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lfp_battery",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "battery_select",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 240,
        "wires": [
            [
                "8727b486fc8278ab"
            ]
        ]
    },
    {
        "id": "41b1eeafb3de5f7f",
        "type": "delay",
        "z": "85860d2069ad95cd",
        "name": "500ms delay",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 870,
        "y": 200,
        "wires": [
            [
                "9a6ab8bb45491ff0"
            ]
        ]
    },
    {
        "id": "eb94063d41bc944d",
        "type": "switch",
        "z": "85860d2069ad95cd",
        "name": "ON / OFF",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 200,
        "y": 180,
        "wires": [
            [
                "4a5b49ec6b0b88c8"
            ],
            [
                "2cd36db492e9b42c"
            ]
        ]
    },
    {
        "id": "3774778b55522af7",
        "type": "link out",
        "z": "85860d2069ad95cd",
        "name": "inverter",
        "mode": "link",
        "links": [
            "2ca40f854aa53bc4"
        ],
        "x": 1005,
        "y": 240,
        "wires": []
    },
    {
        "id": "5d77338698d792a2",
        "type": "link out",
        "z": "85860d2069ad95cd",
        "name": "inverter",
        "mode": "link",
        "links": [
            "2ca40f854aa53bc4"
        ],
        "x": 1005,
        "y": 120,
        "wires": []
    },
    {
        "id": "5d78525fcec731ec",
        "type": "link out",
        "z": "85860d2069ad95cd",
        "name": "power source",
        "mode": "link",
        "links": [
            "2ca40f854aa53bc4"
        ],
        "x": 615,
        "y": 120,
        "wires": []
    },
    {
        "id": "2ca40f854aa53bc4",
        "type": "link in",
        "z": "85860d2069ad95cd",
        "name": "Hardware output",
        "links": [
            "3774778b55522af7",
            "5d77338698d792a2",
            "e7c6ee8b7d92b0ef",
            "c2dfc55fe818d2d3",
            "8727b486fc8278ab",
            "5d78525fcec731ec"
        ],
        "x": 1435,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "637fe192e759c089",
        "type": "comment",
        "z": "85860d2069ad95cd",
        "name": "OFF",
        "info": "",
        "x": 190,
        "y": 240,
        "wires": []
    },
    {
        "id": "af4a5c51dd2f13eb",
        "type": "comment",
        "z": "85860d2069ad95cd",
        "name": "ON",
        "info": "",
        "x": 190,
        "y": 120,
        "wires": []
    },
    {
        "id": "7289bb0370b0eeff",
        "type": "delay",
        "z": "bec2118860bb84ba",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": true,
        "outputs": 2,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "daf4b0c59703337f"
            ],
            [
                "674f53adfc698976"
            ]
        ]
    },
    {
        "id": "b9b3236fb564f861",
        "type": "delay",
        "z": "bec2118860bb84ba",
        "name": "",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 120,
        "wires": [
            [
                "674f53adfc698976"
            ]
        ]
    },
    {
        "id": "b2bbb41eaf92958d",
        "type": "delay",
        "z": "bec2118860bb84ba",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": true,
        "outputs": 1,
        "x": 1170,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "2ca9afd17404e819",
        "type": "change",
        "z": "bec2118860bb84ba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "threshold",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "7289bb0370b0eeff"
            ]
        ]
    },
    {
        "id": "daf4b0c59703337f",
        "type": "change",
        "z": "bec2118860bb84ba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "threshold",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 120,
        "wires": [
            [
                "b9b3236fb564f861"
            ]
        ]
    },
    {
        "id": "674f53adfc698976",
        "type": "function",
        "z": "bec2118860bb84ba",
        "name": "double rate",
        "func": "var threshold = env.get(\"threshold\");\nmsg.rate = threshold*2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 200,
        "wires": [
            [
                "b2bbb41eaf92958d"
            ]
        ]
    },
    {
        "id": "a0480f9bec6d0d26",
        "type": "mysql",
        "z": "d8f3724deb76e0db",
        "mydb": "9accbd4c3bdcd845",
        "name": "",
        "x": 380,
        "y": 80,
        "wires": [
            [
                "81760f68e8cb2a1a"
            ]
        ]
    },
    {
        "id": "81760f68e8cb2a1a",
        "type": "function",
        "z": "d8f3724deb76e0db",
        "name": "output parser",
        "func": "var setting = [flow.get(\"setting\")];\n\nmsg.payload = msg.payload[0][setting];\nmsg.topic = setting;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "9a9241d78a196ff1",
        "type": "function",
        "z": "d8f3724deb76e0db",
        "name": "input parser",
        "func": "\nmsg.topic = \"SELECT \" + msg.payload +\" FROM settings WHERE id=1;\";\nflow.set (\"setting\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [
                "a0480f9bec6d0d26"
            ]
        ]
    },
    {
        "id": "1a5737cf1628b322",
        "type": "function",
        "z": "a7233230404c3289",
        "name": "Fridge",
        "func": "//turn on\nif(msg.payload){\n    global.set(\"output_state.fridge\", true);\n    return[{payload:true}, {payload:false}, null];\n}\n// turn off\nelse {\n    global.set(\"output_state.fridge\", false);\n    return[null, {payload:false}, {payload:true}];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 140,
        "wires": [
            [
                "782769a562223dec"
            ],
            [
                "38537662831ea5ef"
            ],
            [
                "90613ed6f9f64d81"
            ]
        ]
    },
    {
        "id": "38537662831ea5ef",
        "type": "delay",
        "z": "a7233230404c3289",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "782769a562223dec",
                "90613ed6f9f64d81"
            ]
        ]
    },
    {
        "id": "782769a562223dec",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "fridge enable",
        "pin": "23",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 830,
        "y": 80,
        "wires": []
    },
    {
        "id": "90613ed6f9f64d81",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "fridge disable",
        "pin": "22",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 200,
        "wires": []
    },
    {
        "id": "b8e691216781847a",
        "type": "switch",
        "z": "a7233230404c3289",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "fridge",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "charger",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "inverter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "battery_select",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "aux_output",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 210,
        "y": 400,
        "wires": [
            [
                "1a5737cf1628b322"
            ],
            [
                "d57f3fed3232e6aa"
            ],
            [
                "be1fef61343d6adc"
            ],
            [
                "753d5c95ab39943d"
            ],
            [
                "db52463adb57ca82"
            ],
            [
                "f3553b998afc9739"
            ]
        ]
    },
    {
        "id": "d57f3fed3232e6aa",
        "type": "function",
        "z": "a7233230404c3289",
        "name": "Charger",
        "func": "//turn on\nif(msg.payload){\n    global.set(\"output_state.charger\", true);\n    return[{payload:true}, {payload:false}, null];\n}\n// turn off\nelse {\n    global.set(\"output_state.charger\", false);\n    return[null, {payload:false}, {payload:true}];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 300,
        "wires": [
            [
                "76193dba3bc24373"
            ],
            [
                "065f9781f2fab846"
            ],
            [
                "88cc2e82349ad803"
            ]
        ]
    },
    {
        "id": "065f9781f2fab846",
        "type": "delay",
        "z": "a7233230404c3289",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 630,
        "y": 300,
        "wires": [
            [
                "76193dba3bc24373",
                "88cc2e82349ad803"
            ]
        ]
    },
    {
        "id": "be1fef61343d6adc",
        "type": "function",
        "z": "a7233230404c3289",
        "name": "Inverter",
        "func": "//turn on\nif(msg.payload){\n    global.set(\"output_state.inverter\", true);\n    return[{payload:true}, {payload:false}, null];\n}\n// turn off\nelse {\n    global.set(\"output_state.inverter\", false);\n    return[null, {payload:false}, {payload:true}];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 460,
        "wires": [
            [
                "7ef21e46e8d661a8"
            ],
            [
                "bf34d6585b32494c"
            ],
            [
                "da7bf915a49c62e2"
            ]
        ]
    },
    {
        "id": "bf34d6585b32494c",
        "type": "delay",
        "z": "a7233230404c3289",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 630,
        "y": 460,
        "wires": [
            [
                "7ef21e46e8d661a8",
                "da7bf915a49c62e2"
            ]
        ]
    },
    {
        "id": "76193dba3bc24373",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "charger enable",
        "pin": "8",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 240,
        "wires": []
    },
    {
        "id": "88cc2e82349ad803",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "charger disable",
        "pin": "25",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 360,
        "wires": []
    },
    {
        "id": "7ef21e46e8d661a8",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "inverter enable",
        "pin": "18",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 400,
        "wires": []
    },
    {
        "id": "da7bf915a49c62e2",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "inverter disable",
        "pin": "17",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 520,
        "wires": []
    },
    {
        "id": "3c41044470a0259c",
        "type": "link in",
        "z": "a7233230404c3289",
        "name": "update_output_state",
        "links": [
            "a169fe1c4522c408",
            "d79bcea1e9a923c6",
            "e742b038771c6432"
        ],
        "x": 95,
        "y": 400,
        "wires": [
            [
                "b8e691216781847a",
                "e9f912577a5edc23"
            ]
        ]
    },
    {
        "id": "74b2ecf88209a57e",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "inverter source sel",
        "pin": "24",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 850,
        "y": 580,
        "wires": []
    },
    {
        "id": "18ed1d456a74c5db",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "aux_output",
        "pin": "12",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 830,
        "y": 700,
        "wires": []
    },
    {
        "id": "9acc11c403c64e91",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "pump",
        "pin": "13",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 810,
        "y": 640,
        "wires": []
    },
    {
        "id": "753d5c95ab39943d",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "inverter source sel",
        "rules": [
            {
                "t": "set",
                "p": "output_state.inverter_source",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "lfp_battery",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "lead_battery",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 580,
        "wires": [
            [
                "74b2ecf88209a57e"
            ]
        ]
    },
    {
        "id": "62b805e1a5e96579",
        "type": "rpi-gpio in",
        "z": "a7233230404c3289",
        "name": "switch_kitchen",
        "pin": "6",
        "intype": "up",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 240,
        "y": 860,
        "wires": [
            [
                "d7677ca1f297aef9"
            ]
        ]
    },
    {
        "id": "617471841b2f9af8",
        "type": "rpi-gpio in",
        "z": "a7233230404c3289",
        "name": "switch_living_room",
        "pin": "16",
        "intype": "up",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 250,
        "y": 900,
        "wires": [
            [
                "b930d4cdadfdab52"
            ]
        ]
    },
    {
        "id": "5cc0677001704f3a",
        "type": "rpi-gpio in",
        "z": "a7233230404c3289",
        "name": "aux_input_1",
        "pin": "20",
        "intype": "up",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 230,
        "y": 940,
        "wires": [
            [
                "8d808f0510ac1c56"
            ]
        ]
    },
    {
        "id": "6bc225a958d0b857",
        "type": "rpi-gpio in",
        "z": "a7233230404c3289",
        "name": "aux_input_2",
        "pin": "21",
        "intype": "up",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 230,
        "y": 980,
        "wires": [
            [
                "63ea6439ffa83c58"
            ]
        ]
    },
    {
        "id": "cead0d34d453b78b",
        "type": "comment",
        "z": "a7233230404c3289",
        "name": "Hardware Output",
        "info": "",
        "x": 180,
        "y": 100,
        "wires": []
    },
    {
        "id": "70b061ebea3e6388",
        "type": "comment",
        "z": "a7233230404c3289",
        "name": "Hardware Input",
        "info": "",
        "x": 180,
        "y": 800,
        "wires": []
    },
    {
        "id": "675526f4c5306cda",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "input_state.switch_kitchen",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "switch_kitchen",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 860,
        "wires": [
            [
                "7538c7f00b6939fb"
            ]
        ]
    },
    {
        "id": "97d703f154174730",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "input_state.switch_living_room",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "switch_living_room",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 900,
        "wires": [
            [
                "7538c7f00b6939fb"
            ]
        ]
    },
    {
        "id": "5a73c39ebc6ccb3f",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "input_state.aux_input_1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "aux_input_1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 940,
        "wires": [
            [
                "7538c7f00b6939fb"
            ]
        ]
    },
    {
        "id": "76ee4cc3b2a51557",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "input_state.aux_input_2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "aux_input_2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 980,
        "wires": [
            [
                "7538c7f00b6939fb"
            ]
        ]
    },
    {
        "id": "d7677ca1f297aef9",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "low active logic",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 860,
        "wires": [
            [
                "675526f4c5306cda",
                "db52463adb57ca82"
            ]
        ]
    },
    {
        "id": "b930d4cdadfdab52",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "low active logic",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 900,
        "wires": [
            [
                "97d703f154174730"
            ]
        ]
    },
    {
        "id": "8d808f0510ac1c56",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "low active logic",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 940,
        "wires": [
            [
                "5a73c39ebc6ccb3f"
            ]
        ]
    },
    {
        "id": "63ea6439ffa83c58",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "low active logic",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 980,
        "wires": [
            [
                "76ee4cc3b2a51557"
            ]
        ]
    },
    {
        "id": "7538c7f00b6939fb",
        "type": "link out",
        "z": "a7233230404c3289",
        "name": "input_state_trigger",
        "mode": "link",
        "links": [
            "9caacc1da750c852",
            "0efd4833ca974c55",
            "ae30eeae9c1a5c51",
            "528f05d6f6054ab6",
            "e5ceae0d0528eb0c",
            "69ca1224f189f87d",
            "3cb000ba3a4683df"
        ],
        "x": 865,
        "y": 920,
        "wires": []
    },
    {
        "id": "b117581304f30419",
        "type": "function",
        "z": "a7233230404c3289",
        "name": "init global objects",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n// init global object\nglobal.set(\"input_state\", {});\nglobal.set(\"output_state\", {charger:false, fridge:false, inverter:false, inverter_source: \"lfp_battery\", pump: false, aux_output:false});",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e9f912577a5edc23",
        "type": "link out",
        "z": "a7233230404c3289",
        "name": "output_state_trigger",
        "mode": "link",
        "links": [
            "ae30eeae9c1a5c51",
            "2134e4f4266bb188",
            "59186423723b03ca",
            "69ca1224f189f87d",
            "21656fdf2854b0de",
            "3cb000ba3a4683df"
        ],
        "x": 245,
        "y": 320,
        "wires": []
    },
    {
        "id": "db52463adb57ca82",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "output_state.pump",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 640,
        "wires": [
            [
                "9acc11c403c64e91"
            ]
        ]
    },
    {
        "id": "f3553b998afc9739",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "output_state.aux_output",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 700,
        "wires": [
            [
                "18ed1d456a74c5db"
            ]
        ]
    },
    {
        "id": "90100887d3f2b4e7",
        "type": "inject",
        "z": "a7233230404c3289",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "output_state",
        "payloadType": "global",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "e9f912577a5edc23"
            ]
        ]
    },
    {
        "id": "b5c43be785249085",
        "type": "ui_dropdown",
        "z": "78b28997a4d07be2",
        "name": "dropdown menu",
        "label": "Fridge Algorithm",
        "tooltip": "",
        "place": "always off",
        "group": "6c304982dc7231d9",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "always on",
                "value": "always_on",
                "type": "str"
            },
            {
                "label": "always on Lead",
                "value": "always_on_lead",
                "type": "str"
            },
            {
                "label": "always off",
                "value": "always_off",
                "type": "str"
            },
            {
                "label": "no temp sensor",
                "value": "no_sensor",
                "type": "str"
            },
            {
                "label": "summer",
                "value": "summer",
                "type": "str"
            },
            {
                "label": "battery life",
                "value": "battery_life",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 340,
        "y": 380,
        "wires": [
            [
                "54270dc9f8926465"
            ]
        ]
    },
    {
        "id": "3313eca393a477fb",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "always off",
        "func": "var fridge_state = global.get(\"output_state.fridge\");\n\n// if fridge is on, turn it off\nif(fridge_state) {\n    return {payload:false};\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 540,
        "wires": [
            [
                "a86f443541fb1ad9"
            ]
        ]
    },
    {
        "id": "6dd922fb88a0058b",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "always on",
        "func": "var fridge_state = global.get(\"output_state.fridge\");\n\n// if battery is too low abort and do nothing\nif(global.get(\"low_soc\")) {\n    return;\n}\n\n// check inverter source\nvar is_source_lfp = false;\nif(global.get(\"output_state.inverter_source\") == \"lfp_battery\") {\n    is_source_lfp = true;\n}\n\n// if fridge is off or source is not lfp, turn it on\nif(!fridge_state || !is_source_lfp) {\n    msg.payload = true;\n    msg.switch_to_lfp = true;\n    return msg;\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 580,
        "wires": [
            [
                "a86f443541fb1ad9"
            ]
        ]
    },
    {
        "id": "883ff0dabf8e8aaa",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "no sensor algorithm",
        "func": "var fridge_state = global.get(\"output_state.fridge\");\nvar soc = global.get(\"state_of_charge\");\nvar properties = flow.get(\"algorithms.summer\");\nvar interval = context.get(\"interval\");\nconst on_timeout = 10 // 5 min on time\nconst off_timeout = 60 // 5 min on time\n\n// turn on fridge if battery is fully charged with 60 min interval\nif((soc >= 95) && (((Date.now()/60000)-interval) >= off_timeout)) {\n    // if fridge already on\n    if(fridge_state) {\n        return;\n    }\n    context.set(\"interval\", Date.now()/60000);\n    msg.payload = true;\n    msg.switch_to_lfp = true;\n    return msg;\n}\n\n// turn off fridge 10 mins on\nelse if(((Date.now()/60000)-interval) >= on_timeout) {\n    // if fridge already off\n    if(!fridge_state) {\n        return;\n    }\n    context.set(\"interval\", Date.now()/60000);\n    return {payload:false};\n}\n\nreturn;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 660,
        "wires": [
            [
                "a86f443541fb1ad9"
            ]
        ]
    },
    {
        "id": "1966728c9236e2bb",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "summer algorithm",
        "func": "var fridge_state = global.get(\"output_state.fridge\");\nvar soc = global.get(\"state_of_charge\");\nvar properties = flow.get(\"algorithms.summer\");\nvar fridge_temp = 20; // need to be modified\n\n// turn on fridge if upper threshold temperature exeeded or battery is fully charged\nif((soc == 100) || (fridge_temp > properties.on_threshold)) {\n    // if fridge already on\n    if(fridge_state) {\n        return;\n    }\n    msg.payload = true;\n    msg.switch_to_lfp = true;\n}\n\n// turn off fridge if temperature is lower than lower threshold \nelse if(fridge_temp < properties.off_threshold) {\n    // if fridge already off\n    if(!fridge_state) {\n        return;\n    }\n    msg.payload = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 700,
        "wires": [
            [
                "a86f443541fb1ad9"
            ]
        ]
    },
    {
        "id": "a0bbb818d234da39",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "battery life algorithm",
        "func": "var algorithm=flow.get('algorithm') || 0;\n\nif(algorithm == \"battery life\"){\n\n    var lfp_soc = global.get('lfp_soc') || 0;\n    var fridge_temp = flow.get('fridge_temp') || 0;\n    \n    const UPPER_FRIDGE_TEMP_THRESHOLD = 10;\n    const LOWER_FRIDGE_TEMP_THRESHOLD = 6;\n    const UPPER_LFP_SOC_THRESHOLD = 35;\n    const LOWER_LFP_SOC_THRESHOLD = 20;\n    \n    if(lfp_soc >= UPPER_LFP_SOC_THRESHOLD && fridge_temp >= UPPER_FRIDGE_TEMP_THRESHOLD) {\n        msg.payload = true;\n        return msg;\n    }\n    else if(lfp_soc < LOWER_LFP_SOC_THRESHOLD) {\n        flow.set('low_soc', true);\n        msg.payload = false;\n        return msg;\n    }\n    else if(fridge_temp < LOWER_FRIDGE_TEMP_THRESHOLD) {\n        msg.payload = false;\n        return msg;\n    }\n    else {\n        msg.payload = Boolean(global.get('fridge_status') || 0);\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "9342b1041f1f9ae3",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "algorithm",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 420,
        "wires": [
            [
                "d4159a4a77d49a75"
            ]
        ]
    },
    {
        "id": "59f6bbaa386ef7db",
        "type": "switch",
        "z": "78b28997a4d07be2",
        "name": "",
        "property": "algorithm",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "always_off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "always_on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "always_on_lead",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "no_sensor",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "summer",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "battery_life",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 1110,
        "y": 640,
        "wires": [
            [
                "3313eca393a477fb"
            ],
            [
                "6dd922fb88a0058b"
            ],
            [
                "c26c185c2bc38fd9"
            ],
            [
                "883ff0dabf8e8aaa"
            ],
            [
                "1966728c9236e2bb"
            ],
            [
                "a0bbb818d234da39"
            ]
        ]
    },
    {
        "id": "a86f443541fb1ad9",
        "type": "subflow:b57434cd3c37a84c",
        "z": "78b28997a4d07be2",
        "name": "",
        "x": 1620,
        "y": 600,
        "wires": [
            [
                "d79bcea1e9a923c6"
            ]
        ]
    },
    {
        "id": "d79bcea1e9a923c6",
        "type": "link out",
        "z": "78b28997a4d07be2",
        "name": "hw_out",
        "mode": "link",
        "links": [
            "3c41044470a0259c",
            "1f64a934a55cdb96",
            "59186423723b03ca"
        ],
        "x": 1765,
        "y": 600,
        "wires": []
    },
    {
        "id": "c26c185c2bc38fd9",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "always on lead",
        "func": "var fridge_state = global.get(\"output_state.fridge\");\n\n// if battery is too low abort and do nothing\nif(global.get(\"low_soc\")) {\n    return;\n}\n\n// check inverter source\nvar is_source_lfp = false;\nif(global.get(\"output_state.inverter_source\") == \"lfp_battery\") {\n    is_source_lfp = true;\n}\n\n// if fridge is off or source is not lfp, turn it on\nif(!fridge_state || is_source_lfp) {\n    msg.payload = true;\n    msg.switch_to_lfp = false;\n    return msg;\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 620,
        "wires": [
            [
                "a86f443541fb1ad9"
            ]
        ]
    },
    {
        "id": "620bbfe29dd4efc7",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "init flow variables",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nvar algorithms = {\n    always_on: {\n        on_threshold: 6,\n        off_threshold: 0,\n        description: \n        \"Always onhalihaloooo\"\n    },\n    always_on_lead: {\n        on_threshold: 10,\n        off_threshold: 2,\n        description: \n        \"Always onhalijdnifivnhaloooo\"\n    },\n    always_off: {\n        on_threshold: 0,\n        off_threshold: 0,\n        description: \n        \"Always ocnfuncer9ennhalihaloooo\"\n    },\n    summer: {\n        on_threshold: 8,\n        off_threshold: 2,\n        description: \n        \"Always on9ucnopaidjcihalihaloooo\"\n    },\n    winter: {\n        on_threshold: 10,\n        off_threshold: 5,\n        description: \n        \"Always onhalihaloooo\"\n    },\n    battery_life: {\n        on_threshold: 15,\n        off_threshold: 7,\n        description: \n        \"Always onhalihaloooo\"\n    }\n};\nflow.set(\"algorithms\", algorithms);\n\nreturn;",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "97683e1186617581",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "get off temp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "algorithms[msg.payload].off_threshold",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "e692ff3887d118ab",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "get on temp",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "algorithms[msg.payload].on_threshold",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "986e7a47ab9af213",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "get description",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "algorithms[msg.payload].description",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "914959a74c4851e1",
        "type": "inject",
        "z": "78b28997a4d07be2",
        "name": "init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "always_off",
        "payloadType": "str",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "b5c43be785249085"
            ]
        ]
    },
    {
        "id": "edc2567c3c6ea10c",
        "type": "comment",
        "z": "78b28997a4d07be2",
        "name": "To Do",
        "info": "# to do:\n- implement algorithms:\n    - winter\n    - battery life\n- implement temperature sensor\n- update descriptions\n",
        "x": 110,
        "y": 140,
        "wires": []
    },
    {
        "id": "0186a8e4e7eeeee7",
        "type": "link in",
        "z": "78b28997a4d07be2",
        "name": "low_soc_trigger",
        "links": [
            "23a40e9d5ce7f267",
            "3c8b09578758d60a",
            "acd24e44be310637"
        ],
        "x": 55,
        "y": 460,
        "wires": [
            [
                "33ad44b98264aa12"
            ]
        ]
    },
    {
        "id": "d4159a4a77d49a75",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "check low SOC",
        "func": "var is_low_soc = global.get(\"low_soc\");\nvar algorithm = flow.get(\"algorithm\");\n\n// if battery is low and selected algorithm is different to \n// always_off force algorithm to always_off\nif(is_low_soc && (algorithm != \"always_off\")) {\n    flow.set(\"algorithm\", \"always_off\");\n    return [{payload: \"always_off\"}, msg];\n}\n\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 420,
        "wires": [
            [
                "3c8b09578758d60a"
            ],
            [
                "59f6bbaa386ef7db"
            ]
        ]
    },
    {
        "id": "33ad44b98264aa12",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "low soc",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "always_off",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "battery_life",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 460,
        "wires": [
            [
                "b5c43be785249085"
            ]
        ]
    },
    {
        "id": "3c8b09578758d60a",
        "type": "link out",
        "z": "78b28997a4d07be2",
        "name": "low_soc_force",
        "mode": "link",
        "links": [
            "0186a8e4e7eeeee7"
        ],
        "x": 1085,
        "y": 420,
        "wires": []
    },
    {
        "id": "7eb26657ca88314f",
        "type": "delay",
        "z": "78b28997a4d07be2",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 710,
        "y": 340,
        "wires": [
            [
                "e692ff3887d118ab",
                "97683e1186617581",
                "986e7a47ab9af213"
            ]
        ]
    },
    {
        "id": "e5ceae0d0528eb0c",
        "type": "link in",
        "z": "78b28997a4d07be2",
        "name": "input_state_trigger",
        "links": [
            "7538c7f00b6939fb"
        ],
        "x": 55,
        "y": 300,
        "wires": [
            [
                "a915abf7b9d86c60"
            ]
        ]
    },
    {
        "id": "a915abf7b9d86c60",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "",
        "func": "if(msg.topic == \"switch_living_room\"){\n    if(msg.payload){\n        msg.payload = \"always_on\";\n    }\n    else {\n        msg.payload = \"always_off\";\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 300,
        "wires": [
            [
                "b5c43be785249085"
            ]
        ]
    },
    {
        "id": "df6f4d601096e352",
        "type": "link in",
        "z": "78b28997a4d07be2",
        "name": "",
        "links": [
            "0ff4e0486b9844cb"
        ],
        "x": 1005,
        "y": 720,
        "wires": [
            [
                "59f6bbaa386ef7db"
            ]
        ]
    },
    {
        "id": "59186423723b03ca",
        "type": "link in",
        "z": "78b28997a4d07be2",
        "name": "hardware_state_trigger",
        "links": [
            "d79bcea1e9a923c6",
            "e9f912577a5edc23"
        ],
        "x": 1105,
        "y": 120,
        "wires": [
            [
                "cf6a3bc3f772aa9e",
                "ac852fb46fdfd4ac",
                "5406287627a4d420"
            ]
        ]
    },
    {
        "id": "cf6a3bc3f772aa9e",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output_state.fridge",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 80,
        "wires": [
            [
                "2a87cc921872582f"
            ]
        ]
    },
    {
        "id": "ac852fb46fdfd4ac",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output_state.inverter",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 120,
        "wires": [
            [
                "5022643e36f772b8"
            ]
        ]
    },
    {
        "id": "5406287627a4d420",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output_state.inverter_source",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 160,
        "wires": [
            [
                "1935f47f3671086f"
            ]
        ]
    },
    {
        "id": "08c5c713b62ce9a6",
        "type": "ui_gauge",
        "z": "78b28997a4d07be2",
        "name": "",
        "group": "6c304982dc7231d9",
        "order": 1,
        "width": 7,
        "height": 3,
        "gtype": "donut",
        "title": "",
        "label": "C°",
        "format": "{{value}}",
        "min": "-20",
        "max": "20",
        "colors": [
            "#00fdff",
            "#00f900",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1450,
        "y": 40,
        "wires": []
    },
    {
        "id": "2a87cc921872582f",
        "type": "ui_led",
        "z": "78b28997a4d07be2",
        "order": 2,
        "group": "6c304982dc7231d9",
        "width": 0,
        "height": 0,
        "label": "Fridge State",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Fridge Compressor Status",
        "x": 1520,
        "y": 80,
        "wires": []
    },
    {
        "id": "cd4cceed0a32202e",
        "type": "ui_slider",
        "z": "78b28997a4d07be2",
        "d": true,
        "name": "slider on",
        "label": "",
        "tooltip": "",
        "group": "",
        "order": 9,
        "width": 1,
        "height": 4,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "-10",
        "max": "20",
        "step": 1,
        "className": "",
        "x": 1280,
        "y": 280,
        "wires": [
            [
                "f68bf2125f361c6d",
                "6864dae823ed17bf"
            ]
        ]
    },
    {
        "id": "f68bf2125f361c6d",
        "type": "ui_gauge",
        "z": "78b28997a4d07be2",
        "d": true,
        "name": "donut on",
        "group": "",
        "order": 10,
        "width": 6,
        "height": 4,
        "gtype": "donut",
        "title": "",
        "label": "°C",
        "format": "{{value}}",
        "min": "-10",
        "max": "20",
        "colors": [
            "#53d5fd",
            "#77bb41",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1460,
        "y": 280,
        "wires": []
    },
    {
        "id": "c1fc73b7982dad73",
        "type": "ui_slider",
        "z": "78b28997a4d07be2",
        "d": true,
        "name": "slider off",
        "label": "",
        "tooltip": "",
        "group": "",
        "order": 12,
        "width": 1,
        "height": 4,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "-10",
        "max": "20",
        "step": 1,
        "className": "",
        "x": 1280,
        "y": 320,
        "wires": [
            [
                "4679b57a12795705",
                "6864dae823ed17bf"
            ]
        ]
    },
    {
        "id": "4679b57a12795705",
        "type": "ui_gauge",
        "z": "78b28997a4d07be2",
        "d": true,
        "name": "donut off",
        "group": "",
        "order": 13,
        "width": 6,
        "height": 4,
        "gtype": "donut",
        "title": "",
        "label": "°C",
        "format": "{{value}}",
        "min": "-10",
        "max": "20",
        "colors": [
            "#53d5fd",
            "#77bb41",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1460,
        "y": 320,
        "wires": []
    },
    {
        "id": "6864dae823ed17bf",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "update algorithms property",
        "func": "var algorithm = msg.topic;\nvar algorithms = flow.get(\"algorithms\");\n\n// update algorithms property with new threshold values\nif(msg.topic == \"threshold_on\"){\n  algorithms[algorithm].on_threshold = msg.payload;\n  \n}\nelse if(msg.topic == \"threshold_off\") {\n    algorithms[algorithm].off_threshold = msg.payload;\n}\nflow.set(\"algorithms\", algorithms);\n\nreturn;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "69453e4b006bb3aa",
        "type": "ui_template",
        "z": "78b28997a4d07be2",
        "d": true,
        "group": "",
        "name": "description",
        "order": 4,
        "width": 7,
        "height": 3,
        "format": "\n<div style=\"font-weight: bold\">Description:<br></div>\n<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1470,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "360aa971f7f3e56e",
        "type": "ui_template",
        "z": "78b28997a4d07be2",
        "d": true,
        "group": "",
        "name": "donut on title",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<div style=\"text-align: center\">Turn On Temperature</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1610,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "e1ef809bf9053ec0",
        "type": "ui_template",
        "z": "78b28997a4d07be2",
        "d": true,
        "group": "",
        "name": "donut off title",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<div style=\"text-align: center\">Turn Off Temperature</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1610,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "5022643e36f772b8",
        "type": "ui_led",
        "z": "78b28997a4d07be2",
        "d": true,
        "order": 5,
        "group": "",
        "width": 0,
        "height": 0,
        "label": "Inverter Status",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "inverter Status",
        "x": 1480,
        "y": 120,
        "wires": []
    },
    {
        "id": "1935f47f3671086f",
        "type": "ui_text",
        "z": "78b28997a4d07be2",
        "d": true,
        "group": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "power_source",
        "label": "Power Source:   ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1480,
        "y": 160,
        "wires": []
    },
    {
        "id": "d8d9d4ba8d5a073e",
        "type": "ui_template",
        "z": "78b28997a4d07be2",
        "d": true,
        "group": "",
        "name": "settings",
        "order": 7,
        "width": 7,
        "height": 1,
        "format": "<p>Settings</p>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1460,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "fa59361f2834c145",
        "type": "link in",
        "z": "78b28997a4d07be2",
        "name": "temp_in",
        "links": [
            "0ff4e0486b9844cb",
            "56b19a046b403ecb"
        ],
        "x": 1345,
        "y": 40,
        "wires": [
            [
                "08c5c713b62ce9a6"
            ]
        ]
    },
    {
        "id": "6bdaa473a64227ef",
        "type": "ui_toast",
        "z": "78b28997a4d07be2",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Low Battery Dialog",
        "x": 1490,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "1850446ee06bddc3",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "set dialog message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Battery too low. Fridge disabled. Charge the battery to reactivate the fridge",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Battery Low",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 400,
        "wires": [
            [
                "6bdaa473a64227ef"
            ]
        ]
    },
    {
        "id": "54270dc9f8926465",
        "type": "subflow:bec2118860bb84ba",
        "z": "78b28997a4d07be2",
        "name": "",
        "x": 520,
        "y": 380,
        "wires": [
            [
                "7eb26657ca88314f",
                "9342b1041f1f9ae3"
            ]
        ]
    },
    {
        "id": "c75009375093c3d3",
        "type": "inject",
        "z": "78b28997a4d07be2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "thsrmrajnsrnaetheath<fb<fbs<fbvsfbd<fbd<fbdbdfbbsfbdfbfb<gbfdv",
        "payloadType": "str",
        "x": 1210,
        "y": 360,
        "wires": [
            [
                "69453e4b006bb3aa"
            ]
        ]
    },
    {
        "id": "0ade02986402d041",
        "type": "ui_gauge",
        "z": "274cb03b3db2d71a",
        "name": "",
        "group": "4c88ce79aeb1c97e",
        "order": 1,
        "width": 4,
        "height": 5,
        "gtype": "donut",
        "title": "",
        "label": "C°",
        "format": "{{value}}",
        "min": "-15",
        "max": "45",
        "colors": [
            "#00fdff",
            "#00f900",
            "#ca3838"
        ],
        "seg1": "5",
        "seg2": "25",
        "className": "",
        "x": 470,
        "y": 120,
        "wires": []
    },
    {
        "id": "e550af8caa271bec",
        "type": "ui_gauge",
        "z": "274cb03b3db2d71a",
        "name": "",
        "group": "4c88ce79aeb1c97e",
        "order": 2,
        "width": 3,
        "height": 5,
        "gtype": "donut",
        "title": "",
        "label": "C°",
        "format": "{{value}}",
        "min": "-5",
        "max": "45",
        "colors": [
            "#00fdff",
            "#00f900",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "25",
        "className": "",
        "x": 450,
        "y": 180,
        "wires": []
    },
    {
        "id": "73791fc295d7901c",
        "type": "ui_gauge",
        "z": "274cb03b3db2d71a",
        "name": "",
        "group": "8ccf1fb7e0607deb",
        "order": 1,
        "width": 4,
        "height": 5,
        "gtype": "wave",
        "title": "",
        "label": "/3",
        "format": "{{value}}",
        "min": "0",
        "max": "3",
        "colors": [
            "#00fdff",
            "#00f900",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 410,
        "y": 320,
        "wires": []
    },
    {
        "id": "1b014b67048a60c9",
        "type": "ui_led",
        "z": "274cb03b3db2d71a",
        "order": 3,
        "group": "8ccf1fb7e0607deb",
        "width": 3,
        "height": 1,
        "label": "Pump",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 430,
        "y": 380,
        "wires": []
    },
    {
        "id": "6c4df644e96fd00d",
        "type": "ui_led",
        "z": "274cb03b3db2d71a",
        "order": 4,
        "group": "8ccf1fb7e0607deb",
        "width": 3,
        "height": 1,
        "label": "Valve",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 430,
        "y": 420,
        "wires": []
    },
    {
        "id": "29a20aa394fd3080",
        "type": "ui_text",
        "z": "274cb03b3db2d71a",
        "group": "8ccf1fb7e0607deb",
        "order": 2,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Water",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 410,
        "y": 260,
        "wires": []
    },
    {
        "id": "98c966e11d3753b1",
        "type": "ui_led",
        "z": "274cb03b3db2d71a",
        "order": 5,
        "group": "8ccf1fb7e0607deb",
        "width": 3,
        "height": 1,
        "label": "Valve 2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 430,
        "y": 460,
        "wires": []
    },
    {
        "id": "20c3aecd272b3f13",
        "type": "inject",
        "z": "274cb03b3db2d71a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 210,
        "y": 320,
        "wires": [
            [
                "73791fc295d7901c"
            ]
        ]
    },
    {
        "id": "4a2056f3963a0e1e",
        "type": "inject",
        "z": "274cb03b3db2d71a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "19",
        "payloadType": "num",
        "x": 250,
        "y": 180,
        "wires": [
            [
                "e550af8caa271bec"
            ]
        ]
    },
    {
        "id": "9802df4faa3c9722",
        "type": "inject",
        "z": "274cb03b3db2d71a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "0ade02986402d041"
            ]
        ]
    },
    {
        "id": "522a28de03c194b1",
        "type": "serial request",
        "z": "493e4b0fcbc7484f",
        "d": true,
        "name": "MPPT request",
        "serial": "594a8a527370c352",
        "x": 600,
        "y": 420,
        "wires": [
            [
                "de36f2d1d965bb8e"
            ]
        ]
    },
    {
        "id": "b60a37816360662b",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "name": "checksum builder",
        "func": "var string = msg.payload;\n\n// checksum calculation\n//split string in bytes array\nvar string_array = string.substring(1).match(/.{1,2}/g);\nstring_array.push(string.substring(0,1));\n// add every bytes togheter\nvar sum = 0;\nfor(var i=0; i < string_array.length; i++){\n    sum = sum + parseInt(string_array[i], 16);\n}\n// subtract sum from 0x55 and convert it to string\nvar checksum = ((((85 - sum) % 256) + 256) % 256).toString(16).toUpperCase();\n\n\nmsg.payload = ':' + string + checksum + '\\n';\n//msg.payload = Buffer.from(msg.payload, 'utf8');\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 420,
        "wires": [
            [
                "522a28de03c194b1"
            ]
        ]
    },
    {
        "id": "de36f2d1d965bb8e",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "name": "checksum tester",
        "func": "// first output: command value\n// second output: message\n// third output: true if data is corrupted\n\nvar string = msg.payload.toString();\n//msg.payload = string;\n//return[null, msg, null];\n\n// take out start and stop signs (: and \\n)\nstring = string.substring(11, string.length-1);\n// get checksum (last byte)\nvar checksum = string.substring(string.length-2);\n\n// checksum calculation\n//split string in bytes array\nvar string_array = string.substring(1, string.length-2).match(/.{1,2}/g);\nstring_array.push(string.substring(0,1));\n// add every bytes togheter\nvar sum = 0;\nfor(var i=0; i < string_array.length; i++){\n    sum = sum + parseInt(string_array[i], 16);\n}\n// subtract sum from 0x55 and convert it to string all caps\nvar myChecksum = ((((85 - sum) % 256) + 256) % 256).toString(16).toUpperCase();\n\n// check data integrity\nvar isDataCorrupted;\nif(myChecksum == checksum){\n    // command\n    var msg1 = {payload: string.substring(0,1)};\n    // data\n    var msg2 = {payload: string.substring(1, string.length-2)};\n    return[msg1, msg2, null];\n}\nelse {\n    return[null, null, {payload: string}];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 420,
        "wires": [
            [],
            [
                "e114afa58ebbb8c1"
            ],
            [
                "8365957b68f97775"
            ]
        ]
    },
    {
        "id": "4ba88c3a7bf4d7cf",
        "type": "inject",
        "z": "493e4b0fcbc7484f",
        "name": "request today history",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "7501000",
        "payloadType": "str",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "b60a37816360662b"
            ]
        ]
    },
    {
        "id": "d860b3b2bc4b6c26",
        "type": "inject",
        "z": "493e4b0fcbc7484f",
        "name": "request yesterday  history",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "7511000",
        "payloadType": "str",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "b60a37816360662b"
            ]
        ]
    },
    {
        "id": "bf2fda8594cf902e",
        "type": "serial in",
        "z": "493e4b0fcbc7484f",
        "g": "82e7dfd030bb8d2f",
        "name": "MPPT broadcast",
        "serial": "594a8a527370c352",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "c7393f8c922a362c"
            ]
        ]
    },
    {
        "id": "e24b696b89968d8e",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "g": "82e7dfd030bb8d2f",
        "name": "broadcast parser",
        "func": "// 1. output --> data object only if data is not corrupted\n// 2. output --> error msg if data is corrupted\n// 3. output --> formatted msg object for database injection\n\nconst db_injection_msg = \"insert into mppt (v_batt, i_batt, v_panel, p_panel, op_state, mppt_mode, off_reason, error_msg, load_state, i_load) values (?,?,?,?,?,?,?,?,?,?);\"\nvar bit_stream = msg.payload;\nvar data = {};\n\n// reorder and standardize checksum string\nconst pid_index = bit_stream.indexOf(\"PID\");\nbit_stream = bit_stream.slice(pid_index-2, bit_stream.indexOf(\"Checksum\", pid_index+1)+10);\n\n//calculate checksum for data integrity\nvar checksum = 0;\nfor(const element of bit_stream) {\n   checksum = (checksum + element) & 255; /* Take modulo 256 in account */\n}\n\n// if data is not corrupted\nif(checksum == 0){\n\n    // convert bitstream to string\n    var string = bit_stream.toString();\n    // remove checksum, lf and cr\n    string = string.substring(2, string.indexOf(\"Checksum\")-1);\n    // convert string to array\n    var array = string.split('\\n');\n    // convert array of string into data object\n    for(const element of array){\n        var property_name = element.substring(0, element.indexOf('\\t'));\n        var property_value = element.substring(element.indexOf('\\t')+1, element.length-1);\n        data[property_name] = property_value;\n    }\n    \n    // check data object for integrity before saving it\n    if(Object.keys(data).length == 19){\n        // update flow object with new data\n        global.set(\"mppt_broadcast\", data);\n        \n        // format data to be injected into database\n        var db_data = Object.values(data);\n        // remove static data\n        db_data = db_data.splice(3,10);\n        msg.payload = db_data;\n        msg.topic = db_injection_msg;\n        return [{payload: data}, null, msg];\n    }\n}\n\n// if data is corrupted\nelse {\n    // data corrucped flag\n    return [null, {payload: \"mppt message corrupted\"}, null];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 100,
        "wires": [
            [
                "cd7be1f40dda90df"
            ],
            [
                "e171066b96771584"
            ],
            [
                "f24e3ce3c78010f2"
            ]
        ]
    },
    {
        "id": "e171066b96771584",
        "type": "debug",
        "z": "493e4b0fcbc7484f",
        "g": "82e7dfd030bb8d2f",
        "name": "data corrupted",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 100,
        "wires": []
    },
    {
        "id": "faab1e33cd83d2ce",
        "type": "change",
        "z": "493e4b0fcbc7484f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "7501000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 480,
        "wires": [
            [
                "b60a37816360662b"
            ]
        ]
    },
    {
        "id": "c7393f8c922a362c",
        "type": "join",
        "z": "493e4b0fcbc7484f",
        "g": "82e7dfd030bb8d2f",
        "name": "",
        "mode": "custom",
        "build": "buffer",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "50",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "e24b696b89968d8e"
            ]
        ]
    },
    {
        "id": "7de9060fb16a3dc2",
        "type": "mysql",
        "z": "493e4b0fcbc7484f",
        "g": "82e7dfd030bb8d2f",
        "mydb": "9accbd4c3bdcd845",
        "name": "broadcast injection",
        "x": 1030,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "5f1bf2f0ddf26c61",
        "type": "ui_ui_control",
        "z": "493e4b0fcbc7484f",
        "name": "",
        "events": "connect",
        "x": 80,
        "y": 480,
        "wires": [
            [
                "faab1e33cd83d2ce"
            ]
        ]
    },
    {
        "id": "f24e3ce3c78010f2",
        "type": "delay",
        "z": "493e4b0fcbc7484f",
        "g": "82e7dfd030bb8d2f",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 820,
        "y": 140,
        "wires": [
            [
                "7de9060fb16a3dc2"
            ]
        ]
    },
    {
        "id": "cd7be1f40dda90df",
        "type": "link out",
        "z": "493e4b0fcbc7484f",
        "g": "82e7dfd030bb8d2f",
        "name": "broadcast_data",
        "mode": "link",
        "links": [
            "1874703f19edaf5a",
            "503c12d16819e9da",
            "1d18e0d4fa25afdb",
            "804d9160d5379cef",
            "3eaa17a3417f5b8b",
            "a628f89f591c3690",
            "1e62d72933ef2bcd",
            "19e263f10f550181",
            "e7286d0da156bdcf",
            "928b3a38f03c176e",
            "e3217e2708881be8",
            "8527b3d67fe2224a",
            "43f77f31e3b2c1b0",
            "b8ac58645a52e7c6",
            "c486e5132cc02d93",
            "e538c1f7d61d4772",
            "f3f7558a608089a3",
            "922227ec3aad9f6d",
            "d267ecf420261df1",
            "e75caaeb484e35dd",
            "c82a9209d50b9495",
            "11cc5bc2508e0b49",
            "6c74cf4b52583377",
            "7903acae81de3fd8",
            "1e2cd0481d654584",
            "27f798f29dcff875",
            "b1e32e51141fe749",
            "c85d48e227ee6bfd",
            "bde5457bae4472d5"
        ],
        "x": 755,
        "y": 60,
        "wires": []
    },
    {
        "id": "e114afa58ebbb8c1",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "name": "data parser",
        "func": "var raw_data = msg.payload;\nvar data = {\n    energy_yield:           [8, 16],    //*10 to Wh\n    energy_consumed:        [16, 24],   //*10 to Wh\n    battery_voltage_max:    [24, 28],   //*10 to mV\n    battery_voltage_min:    [28, 32],   //*10 to mV\n    error_database:         [32, 34],\n    error_0:                [34, 36],\n    error_1:                [36, 38],\n    error_2:                [38, 40],\n    error_3:                [40, 42],\n    time_bulk:              [42, 46],   // minutes\n    time_absorpion:         [46, 50],   // minutes\n    time_float:             [50, 54],   // minutes\n    power_max:              [54, 62],   // in W\n    battery_current_max:    [62, 66],   //*100 in mA\n    panel_voltage_max:      [66, 70],   //*10 in mV\n    day_sequence_number:    [70, 74]\n};\n// decoding routine\nfor(const property in data){\n    // save substring of interest in array of bytes\n    var byte_arr = raw_data.substring(data[property][0], data[property][1]).match(/.{1,2}/g);\n    // invert low nibble with high nibble\n    var inverted_arr = [];\n    for(var i=byte_arr.length-1; i>=0; i--){\n        inverted_arr.push(byte_arr[i]);\n    }\n    // join array of bytes into string then parse string into dec value\n    data[property] = parseInt(inverted_arr.join(''), 16);\n}\n\n\nflow.set(\"today_history\", data);\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8365957b68f97775",
        "type": "debug",
        "z": "493e4b0fcbc7484f",
        "name": "data corrupted",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 460,
        "wires": []
    },
    {
        "id": "5b49d8929650b679",
        "type": "ui_gauge",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "Solar Power",
        "group": "72a8d1b89999131f",
        "order": 1,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "Solar",
        "label": "W",
        "format": "{{msg.payload.PPV}}",
        "min": 0,
        "max": "200",
        "colors": [
            "#0433ff",
            "#0433ff",
            "#0433ff"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1610,
        "y": 60,
        "wires": []
    },
    {
        "id": "fe1234361f9f4bde",
        "type": "ui_text",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "group": "72a8d1b89999131f",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "mppt state",
        "label": "MPPT State:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1610,
        "y": 100,
        "wires": []
    },
    {
        "id": "1874703f19edaf5a",
        "type": "link in",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "broadcast_data",
        "links": [
            "cd7be1f40dda90df"
        ],
        "x": 1355,
        "y": 60,
        "wires": [
            [
                "5b49d8929650b679"
            ]
        ]
    },
    {
        "id": "503c12d16819e9da",
        "type": "link in",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "broadcast_data",
        "links": [
            "cd7be1f40dda90df"
        ],
        "x": 1355,
        "y": 140,
        "wires": [
            [
                "2ec5374cc7d45626"
            ]
        ]
    },
    {
        "id": "e7286d0da156bdcf",
        "type": "link in",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "broadcast_data",
        "links": [
            "cd7be1f40dda90df"
        ],
        "x": 1355,
        "y": 260,
        "wires": [
            [
                "68c85cf9d66453b2"
            ]
        ]
    },
    {
        "id": "928b3a38f03c176e",
        "type": "link in",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "broadcast_data",
        "links": [
            "cd7be1f40dda90df"
        ],
        "x": 1355,
        "y": 100,
        "wires": [
            [
                "a4d932bcecd17514"
            ]
        ]
    },
    {
        "id": "a4d932bcecd17514",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "Parser",
        "func": "switch(msg.payload.CS){\n    case \"0\":\n        return {payload:\"Off\"};\n    case \"2\":\n        return {payload:\"Fault\"};\n    case\"3\":\n        return {payload:\"Bulk\"};\n    case \"4\":\n        return {payload:\"Absorption\"};\n    case \"5\":\n        return {payload:\"Float\"};\n    default:\n        return {payload:\"Other\"};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 100,
        "wires": [
            [
                "fe1234361f9f4bde"
            ]
        ]
    },
    {
        "id": "be41a7f828962f8c",
        "type": "ui_gauge",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "Battery Power",
        "group": "72a8d1b89999131f",
        "order": 3,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "Battery",
        "label": "W",
        "format": "{{value}}",
        "min": "-200",
        "max": "200",
        "colors": [
            "#ff9300",
            "#ffffff",
            "#00f900"
        ],
        "seg1": "0",
        "seg2": "0",
        "className": "",
        "x": 1620,
        "y": 140,
        "wires": []
    },
    {
        "id": "2ec5374cc7d45626",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "Parser",
        "func": "\n\nmsg.payload = Math.round((msg.payload.I/1000) * (msg.payload.V/1000));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 140,
        "wires": [
            [
                "be41a7f828962f8c"
            ]
        ]
    },
    {
        "id": "bde5457bae4472d5",
        "type": "link in",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "broadcast_data",
        "links": [
            "cd7be1f40dda90df"
        ],
        "x": 1355,
        "y": 180,
        "wires": [
            [
                "27dff5e8f07846b1"
            ]
        ]
    },
    {
        "id": "3b63ad5a137efd38",
        "type": "ui_gauge",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "Load Power",
        "group": "72a8d1b89999131f",
        "order": 4,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "Load",
        "label": "W",
        "format": "{{value}}",
        "min": "0",
        "max": "200",
        "colors": [
            "#00f900",
            "#ff9300",
            "#ff2600"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1610,
        "y": 180,
        "wires": []
    },
    {
        "id": "27dff5e8f07846b1",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "Parser",
        "func": "\n\nmsg.payload = Math.round((msg.payload.IL/1000) * (msg.payload.V/1000));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 180,
        "wires": [
            [
                "3b63ad5a137efd38"
            ]
        ]
    },
    {
        "id": "a408cdad7701296b",
        "type": "ui_led",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "order": 6,
        "group": "72a8d1b89999131f",
        "width": 3,
        "height": 1,
        "label": " ",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "load_led",
        "x": 1600,
        "y": 260,
        "wires": []
    },
    {
        "id": "c2df51ef9125b574",
        "type": "ui_switch",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "",
        "label": "Load Enable",
        "tooltip": "",
        "group": "72a8d1b89999131f",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1610,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "68c85cf9d66453b2",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "g": "232f2c028585f7b9",
        "name": "Parser",
        "func": "msg.payload = msg.payload.LOAD;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 260,
        "wires": [
            [
                "a408cdad7701296b"
            ]
        ]
    },
    {
        "id": "1fa466e25aaa5c0c",
        "type": "comment",
        "z": "493e4b0fcbc7484f",
        "name": "ToDo",
        "info": "retrieve hex data;\nimplement load disable with hex com",
        "x": 90,
        "y": 300,
        "wires": []
    },
    {
        "id": "9e4194fd2b51392f",
        "type": "ui_gauge",
        "z": "5a08a5132887b1a2",
        "name": "",
        "group": "7dbe224d7e5b35ba",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Lead Battery",
        "label": "V",
        "format": "{{value}}",
        "min": "10",
        "max": "14.6",
        "colors": [
            "#ff2600",
            "#fffb00",
            "#00f900"
        ],
        "seg1": "12",
        "seg2": "12.6",
        "className": "",
        "x": 810,
        "y": 180,
        "wires": []
    },
    {
        "id": "cab10ae6d1e2d312",
        "type": "ui_led",
        "z": "5a08a5132887b1a2",
        "order": 4,
        "group": "7dbe224d7e5b35ba",
        "width": 0,
        "height": 0,
        "label": "Low Battery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "lead_low_soc",
        "x": 820,
        "y": 240,
        "wires": []
    },
    {
        "id": "2be90e317e4475cc",
        "type": "ui_led",
        "z": "5a08a5132887b1a2",
        "order": 2,
        "group": "7dbe224d7e5b35ba",
        "width": 0,
        "height": 0,
        "label": "Low Battery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "lfp_low_soc",
        "x": 810,
        "y": 120,
        "wires": []
    },
    {
        "id": "4517c637c76c72c7",
        "type": "ui_led",
        "z": "5a08a5132887b1a2",
        "order": 5,
        "group": "7dbe224d7e5b35ba",
        "width": 0,
        "height": 0,
        "label": "Motor Running",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "motor_state",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "a9602caa6197202c",
        "type": "link in",
        "z": "5a08a5132887b1a2",
        "name": "lead_voltage",
        "links": [
            "7ee5db236074879f"
        ],
        "x": 145,
        "y": 180,
        "wires": [
            [
                "9aa69ecdf8582c13",
                "be847ba83e070644"
            ]
        ]
    },
    {
        "id": "be847ba83e070644",
        "type": "switch",
        "z": "5a08a5132887b1a2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "12",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "12",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "13",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "13",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "564e61d2af06e5f8"
            ],
            [
                "1613abdcfb3043da"
            ],
            [
                "394b785ce758a398",
                "03c460bc3819a35e"
            ],
            [
                "26959325fa10e60b",
                "8bf22f9da6203342"
            ]
        ]
    },
    {
        "id": "26959325fa10e60b",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "payload true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "soc.lead_charging",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "4517c637c76c72c7"
            ]
        ]
    },
    {
        "id": "394b785ce758a398",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "payload false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "soc.lead_charging",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 300,
        "wires": [
            [
                "4517c637c76c72c7"
            ]
        ]
    },
    {
        "id": "6197874495896d87",
        "type": "mysql",
        "z": "5a08a5132887b1a2",
        "mydb": "9accbd4c3bdcd845",
        "name": "broadcast injection",
        "x": 810,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "ad4dd13475942629",
        "type": "ui_gauge",
        "z": "5a08a5132887b1a2",
        "name": "",
        "group": "7dbe224d7e5b35ba",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "LFP Battery",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff2600",
            "#ff9300",
            "#00f900"
        ],
        "seg1": "20",
        "seg2": "50",
        "className": "",
        "x": 810,
        "y": 60,
        "wires": []
    },
    {
        "id": "609460fafad1b26f",
        "type": "ui_switch",
        "z": "5a08a5132887b1a2",
        "name": "",
        "label": "LFP Charger",
        "tooltip": "",
        "group": "7dbe224d7e5b35ba",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 810,
        "y": 400,
        "wires": [
            [
                "929cfc8447d48e8b",
                "75dea6ce91a741bb"
            ]
        ]
    },
    {
        "id": "32344b011955cb1f",
        "type": "ui_led",
        "z": "5a08a5132887b1a2",
        "order": 7,
        "group": "7dbe224d7e5b35ba",
        "width": 3,
        "height": 1,
        "label": " ",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "charger_led",
        "x": 1210,
        "y": 340,
        "wires": []
    },
    {
        "id": "e868cde99b8cd0a9",
        "type": "subflow:85860d2069ad95cd",
        "z": "5a08a5132887b1a2",
        "name": "",
        "x": 1440,
        "y": 380,
        "wires": [
            [
                "a169fe1c4522c408"
            ]
        ]
    },
    {
        "id": "564e61d2af06e5f8",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "payload true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "soc.lead_low",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 220,
        "wires": [
            [
                "cab10ae6d1e2d312"
            ]
        ]
    },
    {
        "id": "1613abdcfb3043da",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "payload false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "soc.lead_low",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "cab10ae6d1e2d312"
            ]
        ]
    },
    {
        "id": "03c460bc3819a35e",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "enabled false",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 380,
        "wires": [
            [
                "609460fafad1b26f"
            ]
        ]
    },
    {
        "id": "8bf22f9da6203342",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "enabled true",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "charger_enable",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 420,
        "wires": [
            [
                "59ad5c8e2407e45d"
            ]
        ]
    },
    {
        "id": "929cfc8447d48e8b",
        "type": "function",
        "z": "5a08a5132887b1a2",
        "name": "check motor state",
        "func": "if(msg.enabled || msg.enabled == undefined){\n    return msg;\n}\nelse{\n    return {payload:0};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 380,
        "wires": [
            [
                "32344b011955cb1f",
                "8ee1feb7fa74e323"
            ]
        ]
    },
    {
        "id": "8ee1feb7fa74e323",
        "type": "subflow:bec2118860bb84ba",
        "z": "5a08a5132887b1a2",
        "name": "",
        "env": [
            {
                "name": "threshold",
                "value": "5000",
                "type": "num"
            }
        ],
        "x": 1200,
        "y": 380,
        "wires": [
            [
                "e868cde99b8cd0a9"
            ]
        ]
    },
    {
        "id": "915a485a5f519b49",
        "type": "mysql",
        "z": "5a08a5132887b1a2",
        "mydb": "9accbd4c3bdcd845",
        "name": "",
        "x": 1420,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "75dea6ce91a741bb",
        "type": "rbe",
        "z": "5a08a5132887b1a2",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 420,
        "wires": [
            [
                "0001e19141504356"
            ]
        ]
    },
    {
        "id": "0001e19141504356",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "save setting in db",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "UPDATE settings SET charger_enable=? WHERE id =1;",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[msg.payload]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 420,
        "wires": [
            [
                "915a485a5f519b49"
            ]
        ]
    },
    {
        "id": "aa1763d66d64cc0c",
        "type": "inject",
        "z": "5a08a5132887b1a2",
        "name": "init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "charger_enable",
        "payloadType": "str",
        "x": 450,
        "y": 460,
        "wires": [
            [
                "59ad5c8e2407e45d"
            ]
        ]
    },
    {
        "id": "59ad5c8e2407e45d",
        "type": "subflow:d8f3724deb76e0db",
        "z": "5a08a5132887b1a2",
        "name": "",
        "x": 610,
        "y": 440,
        "wires": [
            [
                "609460fafad1b26f"
            ]
        ]
    },
    {
        "id": "68a536fd892bb7d5",
        "type": "switch",
        "z": "5a08a5132887b1a2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "50",
                "vt": "str"
            },
            {
                "t": "gte",
                "v": "50",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 120,
        "wires": [
            [
                "ce1027a724d075d8"
            ],
            [
                "4c3e4e4971be6bc0"
            ]
        ]
    },
    {
        "id": "ce1027a724d075d8",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "payload true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "soc.lfp_low",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 100,
        "wires": [
            [
                "2be90e317e4475cc"
            ]
        ]
    },
    {
        "id": "4c3e4e4971be6bc0",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "payload false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "soc.lfp_low",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "2be90e317e4475cc"
            ]
        ]
    },
    {
        "id": "9d77d144fcc69357",
        "type": "link out",
        "z": "5a08a5132887b1a2",
        "name": "lfp_soc",
        "mode": "link",
        "links": [
            "2bccd8f8d14553e3"
        ],
        "x": 395,
        "y": 800,
        "wires": []
    },
    {
        "id": "9e608659c75398c5",
        "type": "function",
        "z": "5a08a5132887b1a2",
        "name": "SOC calculator",
        "func": "const data = msg.payload;\nconst max_capacity = 384; //Wh (12.5V * 30Ah)\nconst energy_yield = data.energy_yield*10; //Wh\nconst energy_consumed = data.energy_consumed*10;   //Wh\nvar offset_energy = context.get(\"offset_energy\") || 272;\nvar today_number = flow.get(\"today_number\") || data.day_sequence_number;\n\n// if its a new day\nif(today_number+1 == data.day_sequence_number){\n    today_number = data.day_sequence_number;\n    context.set(\"offset_energy\", (context.get(\"tomorrow_offset_energy\") || offset_energy));\n}\n\n// if battery fully charged (float mode)\nif(flow.get(\"mppt_broadcast\").CS == '5'){\n    context.set(\"offset_energy\", (max_capacity - energy_yield + energy_consumed));\n}\n\nvar left_energy = offset_energy + energy_yield - energy_consumed;\n\n// adjust offset if error detected (SOC > 100%)\nif(left_energy > max_capacity){\n    offset_energy = max_capacity - energy_yield + energy_consumed;\n    context.set(\"offset_energy\", offset_energy);\n    left_energy = offset_energy + energy_yield - energy_consumed;\n}\n// SOC < 0%\nelse if(left_energy < 0){\n    context.set(\"offset_energy\", (0 - energy_yield + energy_consumed));\n    left_energy = 0;\n}\n\ncontext.set(\"tomorrow_offset_energy\", left_energy);\n\nvar soc = Math.round(left_energy * 100 / max_capacity);\nmsg.payload = soc;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "ca0698687e0f238a",
        "type": "inject",
        "z": "5a08a5132887b1a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 250,
        "y": 720,
        "wires": [
            [
                "9d77d144fcc69357",
                "448068782c0e232f"
            ]
        ]
    },
    {
        "id": "2bccd8f8d14553e3",
        "type": "link in",
        "z": "5a08a5132887b1a2",
        "name": "lfp_soc",
        "links": [
            "9d77d144fcc69357"
        ],
        "x": 145,
        "y": 80,
        "wires": [
            [
                "68a536fd892bb7d5",
                "8c13a909770fcfad"
            ]
        ]
    },
    {
        "id": "efd9a1136f98bdbb",
        "type": "function",
        "z": "5a08a5132887b1a2",
        "name": "",
        "func": "const db_injection_msg = \"INSERT INTO soc (lfp_soc, lfp_low, lead_voltage, lead_low, lead_charging) VALUES (?,?,?,?,?);\";\nvar soc = global.get(\"soc\");\nmsg.payload = [soc.lfp_soc, soc.lfp_low, soc.lead_voltage, soc.lead_low, soc.lead_charging]\nmsg.topic = db_injection_msg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 760,
        "wires": [
            [
                "6197874495896d87"
            ]
        ]
    },
    {
        "id": "9aa69ecdf8582c13",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "update global",
        "rules": [
            {
                "t": "set",
                "p": "soc.lead_voltage",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "9e4194fd2b51392f"
            ]
        ]
    },
    {
        "id": "448068782c0e232f",
        "type": "delay",
        "z": "5a08a5132887b1a2",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 450,
        "y": 760,
        "wires": [
            [
                "efd9a1136f98bdbb"
            ]
        ]
    },
    {
        "id": "8c13a909770fcfad",
        "type": "change",
        "z": "5a08a5132887b1a2",
        "name": "update global",
        "rules": [
            {
                "t": "set",
                "p": "soc.lfp_soc",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "ad4dd13475942629"
            ]
        ]
    },
    {
        "id": "7f0eaba4cfec827f",
        "type": "link in",
        "z": "5a08a5132887b1a2",
        "name": "mppt daily trigger",
        "links": [],
        "x": 75,
        "y": 760,
        "wires": [
            [
                "9e608659c75398c5"
            ]
        ]
    },
    {
        "id": "205a6499d6c17ebf",
        "type": "function",
        "z": "5a08a5132887b1a2",
        "name": "count energy yield from charger",
        "func": "const charger_current = 4;\n\n// if the charger is enabled and the battery in not fully charged (bulk)\nif (global.get(\"output_state.charger\" && global.get(\"mppt_broadcast.CS\" == 3))){\n    // calculate energy yield from charger in one minute (currrent*voltage/60minutes)\n    var charger_energy = (4/60)* global.get(\"mppt_broadcast.V\");\n    // add energy to daily enrgy yield\n    global.set(\"today_enrgy_history.energy_yield.charger\", global.get(\"today_enrgy_history.energy_yield.charger\")+charger_energy);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "a169fe1c4522c408",
        "type": "link out",
        "z": "5a08a5132887b1a2",
        "d": true,
        "name": "hw_out",
        "mode": "link",
        "links": [
            "3c41044470a0259c"
        ],
        "x": 1585,
        "y": 380,
        "wires": []
    },
    {
        "id": "1815a152534d40f6",
        "type": "comment",
        "z": "5a08a5132887b1a2",
        "name": "ToDo",
        "info": "implement SOC when hex data retrieved",
        "x": 170,
        "y": 620,
        "wires": []
    },
    {
        "id": "af0b15bc328342de",
        "type": "inject",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "246f9284dfd1ad8d"
            ]
        ]
    },
    {
        "id": "246f9284dfd1ad8d",
        "type": "1-Wire",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "identifier": "28-00000015081d",
        "name": "fridge temp",
        "format": "1",
        "x": 330,
        "y": 320,
        "wires": [
            [
                "363958c7eec04849"
            ]
        ]
    },
    {
        "id": "e8ee218f560979f9",
        "type": "inject",
        "z": "162cea04a51a0717",
        "g": "82d2585d0faf6449",
        "name": "1s trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "8662c0be2162570d",
                "7b31379d00b72044"
            ]
        ]
    },
    {
        "id": "8662c0be2162570d",
        "type": "i2c in",
        "z": "162cea04a51a0717",
        "g": "82d2585d0faf6449",
        "name": "single shot request",
        "busno": "1",
        "address": "105",
        "command": "128",
        "count": "3",
        "x": 530,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f116d819f70f44ad",
        "type": "function",
        "z": "162cea04a51a0717",
        "g": "82d2585d0faf6449",
        "name": "data parser",
        "func": "// check if adc conversion ended\nif(msg.payload[2] == 0) {\n    // build adc value with data bytes\n    var adc_val = msg.payload[1]+ (msg.payload[0]<<8);\n    // calculate voltage divider (10k -100k)--> 1/11\n    adc_val = Math.round(adc_val*1.114)/100;\n    \n    return {payload:adc_val};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 160,
        "wires": [
            [
                "c4fd34b18b94f58f"
            ]
        ]
    },
    {
        "id": "7b31379d00b72044",
        "type": "delay",
        "z": "162cea04a51a0717",
        "g": "82d2585d0faf6449",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "5b9b5fcfd20a8b61"
            ]
        ]
    },
    {
        "id": "5b9b5fcfd20a8b61",
        "type": "i2c in",
        "z": "162cea04a51a0717",
        "g": "82d2585d0faf6449",
        "name": "read data request",
        "busno": "1",
        "address": "105",
        "command": "0",
        "count": "3",
        "x": 530,
        "y": 160,
        "wires": [
            [
                "f116d819f70f44ad"
            ]
        ]
    },
    {
        "id": "7d8c9172021d2374",
        "type": "exec",
        "z": "162cea04a51a0717",
        "command": "docker start d2d77066664b",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "start mysql container",
        "x": 400,
        "y": 580,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "85f246e126af6356",
        "type": "inject",
        "z": "162cea04a51a0717",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 580,
        "wires": [
            [
                "7d8c9172021d2374"
            ]
        ]
    },
    {
        "id": "c4fd34b18b94f58f",
        "type": "rbe",
        "z": "162cea04a51a0717",
        "g": "82d2585d0faf6449",
        "name": "on change filter",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 920,
        "y": 160,
        "wires": [
            [
                "7ee5db236074879f"
            ]
        ]
    },
    {
        "id": "7ee5db236074879f",
        "type": "link out",
        "z": "162cea04a51a0717",
        "g": "82d2585d0faf6449",
        "name": "lead_voltage_trigger",
        "mode": "link",
        "links": [
            "3ae00b0239685317",
            "a9602caa6197202c"
        ],
        "x": 1055,
        "y": 160,
        "wires": []
    },
    {
        "id": "46dc15df4d9a5c02",
        "type": "1-Wire",
        "z": "162cea04a51a0717",
        "d": true,
        "g": "89fde2b35b7808f9",
        "identifier": "28-0000001538b5",
        "name": "indoor temp",
        "format": "1",
        "x": 330,
        "y": 360,
        "wires": [
            [
                "3e673c5e24ef0a0b"
            ]
        ]
    },
    {
        "id": "7ea715a1a228e19a",
        "type": "1-Wire",
        "z": "162cea04a51a0717",
        "d": true,
        "g": "89fde2b35b7808f9",
        "identifier": "28-000000152b52",
        "name": "outdoor temp",
        "format": "1",
        "x": 340,
        "y": 400,
        "wires": [
            [
                "d5118342f3420f54"
            ]
        ]
    },
    {
        "id": "bdbb7a73a45acc1c",
        "type": "inject",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "46dc15df4d9a5c02"
            ]
        ]
    },
    {
        "id": "c180da56bb6e9ad8",
        "type": "inject",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "7ea715a1a228e19a"
            ]
        ]
    },
    {
        "id": "363958c7eec04849",
        "type": "rbe",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "on change filter",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 540,
        "y": 320,
        "wires": [
            [
                "a61d76de1277b5b9"
            ]
        ]
    },
    {
        "id": "3e673c5e24ef0a0b",
        "type": "rbe",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "on change filter",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 540,
        "y": 360,
        "wires": [
            [
                "91a6e4a881bc9e5e"
            ]
        ]
    },
    {
        "id": "d5118342f3420f54",
        "type": "rbe",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "on change filter",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 540,
        "y": 400,
        "wires": [
            [
                "f5f9bfed5aa3fbcd"
            ]
        ]
    },
    {
        "id": "0ff4e0486b9844cb",
        "type": "link out",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "fridge_temp_trigger",
        "mode": "link",
        "links": [
            "fa59361f2834c145",
            "df6f4d601096e352",
            "05fd13f55ce8e67b",
            "e8b2d5bc2e0ac5a1",
            "42a66365bf30cff4"
        ],
        "x": 1005,
        "y": 320,
        "wires": []
    },
    {
        "id": "a9e006439192e826",
        "type": "link out",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "indoor_temp_trigger",
        "mode": "link",
        "links": [],
        "x": 1005,
        "y": 360,
        "wires": []
    },
    {
        "id": "60fe06549654d7a9",
        "type": "link out",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "outdoor_temp_trigger",
        "mode": "link",
        "links": [],
        "x": 1005,
        "y": 400,
        "wires": []
    },
    {
        "id": "a61d76de1277b5b9",
        "type": "function",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "round temp and store in global value",
        "func": "var val = msg.payload;\n\n// check for bug (sometimes a huge number come instead of temp)\nif(val < 60){\n    // round to 2 decimal\n    val = Math.round(val*10)/10;\n    \n    global.set(\"sensors.fridge_temp\", val);\n    msg.payload = val;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 320,
        "wires": [
            [
                "0ff4e0486b9844cb",
                "605a483c5c666862"
            ]
        ]
    },
    {
        "id": "91a6e4a881bc9e5e",
        "type": "function",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "round temp and store in global value",
        "func": "var val = msg.payload;\n// round to 2 decimal\nval = Math.round(val*10)/10;\n\nglobal.set(\"sensors.indoor_temp\", val);\nmsg.payload = val;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 360,
        "wires": [
            [
                "a9e006439192e826",
                "605a483c5c666862"
            ]
        ]
    },
    {
        "id": "f5f9bfed5aa3fbcd",
        "type": "function",
        "z": "162cea04a51a0717",
        "g": "89fde2b35b7808f9",
        "name": "round temp and store in global value",
        "func": "var val = msg.payload;\n// round to 2 decimal\nval = Math.round(val*10)/10;\n\nglobal.set(\"sensors.fridge_outdoor\", val);\nmsg.payload = val;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 400,
        "wires": [
            [
                "60fe06549654d7a9",
                "605a483c5c666862"
            ]
        ]
    },
    {
        "id": "090a14c595fe261a",
        "type": "serial request",
        "z": "162cea04a51a0717",
        "name": "",
        "serial": "594a8a527370c352",
        "x": 510,
        "y": 700,
        "wires": [
            [
                "4461d8d4f2719f0b",
                "ef312b3e26e5315d"
            ]
        ]
    },
    {
        "id": "5b44f077d097ff85",
        "type": "ui_text_input",
        "z": "162cea04a51a0717",
        "name": "",
        "label": "enter HEX",
        "tooltip": "",
        "group": "7ac90561cb0ad481",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "f5cf9afd99b223d1"
            ]
        ]
    },
    {
        "id": "957ed9a806325267",
        "type": "ui_text",
        "z": "162cea04a51a0717",
        "group": "7ac90561cb0ad481",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Command:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 910,
        "y": 660,
        "wires": []
    },
    {
        "id": "f5cf9afd99b223d1",
        "type": "function",
        "z": "162cea04a51a0717",
        "name": "checksum builder",
        "func": "var string = msg.payload;\n\n// checksum calculation\n//split string in bytes array\nvar string_array = string.substring(1).match(/.{1,2}/g);\nstring_array.push(string.substring(0,1));\n// add every bytes togheter\nvar sum = 0;\nfor(var i=0; i < string_array.length; i++){\n    sum = sum + parseInt(string_array[i], 16);\n}\n// subtract sum from 0x55 and convert it to string\nvar checksum = ((((85 - sum) % 256) + 256) % 256).toString(16).toUpperCase();\n\n\nmsg.payload = ':' + string + checksum + '\\n';\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 700,
        "wires": [
            [
                "090a14c595fe261a",
                "ef312b3e26e5315d"
            ]
        ]
    },
    {
        "id": "4461d8d4f2719f0b",
        "type": "function",
        "z": "162cea04a51a0717",
        "name": "checksum tester",
        "func": "// first output: command value\n// second output: message\n// third output: true if data is corrupted\n\nvar string = msg.payload;\n\n// take out start and stop signs (: and \\n)\nstring = string.substring(11, string.length-1);\n// get checksum (last byte)\nvar checksum = string.substring(string.length-2);\n\n// checksum calculation\n//split string in bytes array\nvar string_array = string.substring(1, string.length-2).match(/.{1,2}/g);\nstring_array.push(string.substring(0,1));\n// add every bytes togheter\nvar sum = 0;\nfor(var i=0; i < string_array.length; i++){\n    sum = sum + parseInt(string_array[i], 16);\n}\n// subtract sum from 0x55 and convert it to string all caps\nvar myChecksum = ((((85 - sum) % 256) + 256) % 256).toString(16).toUpperCase();\n\n// check data integrity\nvar isDataCorrupted;\nif(myChecksum == checksum){\n    // command\n    var msg1 = {payload: string.substring(0,1)};\n    // data\n    var msg2 = {payload: string.substring(1, string.length-2)};\n    return[msg1, msg2, null];\n}\nelse {\n    return[null, null, {payload: true}];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 700,
        "wires": [
            [
                "957ed9a806325267",
                "ef312b3e26e5315d"
            ],
            [
                "4e0be048789abefa",
                "ef312b3e26e5315d"
            ],
            [
                "6b4b1cfdb2fa8af8",
                "ef312b3e26e5315d"
            ]
        ]
    },
    {
        "id": "4e0be048789abefa",
        "type": "ui_text",
        "z": "162cea04a51a0717",
        "group": "7ac90561cb0ad481",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Data:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 890,
        "y": 700,
        "wires": []
    },
    {
        "id": "6b4b1cfdb2fa8af8",
        "type": "ui_led",
        "z": "162cea04a51a0717",
        "order": 2,
        "group": "7ac90561cb0ad481",
        "width": 0,
        "height": 0,
        "label": "Data corrupted",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "",
        "x": 890,
        "y": 740,
        "wires": []
    },
    {
        "id": "f6bd29ab49e7c134",
        "type": "comment",
        "z": "162cea04a51a0717",
        "name": "Hex mode",
        "info": "",
        "x": 120,
        "y": 660,
        "wires": []
    },
    {
        "id": "e6b092e42a0563f2",
        "type": "inject",
        "z": "162cea04a51a0717",
        "name": "request today history",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "7501000",
        "payloadType": "str",
        "x": 180,
        "y": 760,
        "wires": [
            [
                "f5cf9afd99b223d1"
            ]
        ]
    },
    {
        "id": "ef312b3e26e5315d",
        "type": "debug",
        "z": "162cea04a51a0717",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 820,
        "wires": []
    },
    {
        "id": "bf50866c2bd6253c",
        "type": "inject",
        "z": "162cea04a51a0717",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "7F0ED00",
        "payloadType": "str",
        "x": 140,
        "y": 800,
        "wires": [
            [
                "f5cf9afd99b223d1"
            ]
        ]
    },
    {
        "id": "605a483c5c666862",
        "type": "debug",
        "z": "162cea04a51a0717",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 380,
        "wires": []
    },
    {
        "id": "84559e93e23de01e",
        "type": "ui_led",
        "z": "201ad97e962a1d7d",
        "order": 5,
        "group": "83e9ca27a8b9a1f0",
        "width": 0,
        "height": 0,
        "label": "Aux Input 2:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "aux_input_2",
        "x": 510,
        "y": 220,
        "wires": []
    },
    {
        "id": "01372a6d1fd9d9d0",
        "type": "ui_led",
        "z": "201ad97e962a1d7d",
        "order": 2,
        "group": "83e9ca27a8b9a1f0",
        "width": 0,
        "height": 0,
        "label": "switch kitchen:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "switch kitchen",
        "x": 520,
        "y": 100,
        "wires": []
    },
    {
        "id": "d5b92732913b40ca",
        "type": "ui_led",
        "z": "201ad97e962a1d7d",
        "order": 3,
        "group": "83e9ca27a8b9a1f0",
        "width": 0,
        "height": 0,
        "label": "switch living room:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "switch living room",
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "10eca5dd5661b4c0",
        "type": "ui_led",
        "z": "201ad97e962a1d7d",
        "order": 4,
        "group": "83e9ca27a8b9a1f0",
        "width": 0,
        "height": 0,
        "label": "Aux Input 1:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "aux_input_1",
        "x": 510,
        "y": 180,
        "wires": []
    },
    {
        "id": "ab1d55a4d9084d05",
        "type": "change",
        "z": "201ad97e962a1d7d",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input_state.switch_kitchen",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 100,
        "wires": [
            [
                "01372a6d1fd9d9d0"
            ]
        ]
    },
    {
        "id": "df14de80b2df74c8",
        "type": "change",
        "z": "201ad97e962a1d7d",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input_state.switch_living_room",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 140,
        "wires": [
            [
                "d5b92732913b40ca"
            ]
        ]
    },
    {
        "id": "f6c0b241d26c8e1a",
        "type": "change",
        "z": "201ad97e962a1d7d",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input_state.aux_input_1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 180,
        "wires": [
            [
                "10eca5dd5661b4c0"
            ]
        ]
    },
    {
        "id": "9d16840935a9dac7",
        "type": "change",
        "z": "201ad97e962a1d7d",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input_state.aux_input_2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 220,
        "wires": [
            [
                "84559e93e23de01e"
            ]
        ]
    },
    {
        "id": "69ca1224f189f87d",
        "type": "link in",
        "z": "201ad97e962a1d7d",
        "name": "hardware_state_trigger",
        "links": [
            "7538c7f00b6939fb",
            "e9f912577a5edc23"
        ],
        "x": 135,
        "y": 300,
        "wires": [
            [
                "ab1d55a4d9084d05",
                "df14de80b2df74c8",
                "f6c0b241d26c8e1a",
                "9d16840935a9dac7",
                "6b62f5be9d9cd0a1",
                "048745b05c4242c4",
                "07718abd29a9b06e",
                "aa51805e9a64dffa",
                "49627c0467524bfb",
                "37e12edeac203aba"
            ]
        ]
    },
    {
        "id": "b4b7c3ac04fa0d26",
        "type": "ui_led",
        "z": "201ad97e962a1d7d",
        "order": 16,
        "group": "83e9ca27a8b9a1f0",
        "width": 3,
        "height": 1,
        "label": " ",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "pump_led",
        "x": 500,
        "y": 680,
        "wires": []
    },
    {
        "id": "6242809304c45573",
        "type": "ui_led",
        "z": "201ad97e962a1d7d",
        "order": 18,
        "group": "83e9ca27a8b9a1f0",
        "width": 3,
        "height": 1,
        "label": " ",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "aux_output_led",
        "x": 520,
        "y": 760,
        "wires": []
    },
    {
        "id": "6b62f5be9d9cd0a1",
        "type": "change",
        "z": "201ad97e962a1d7d",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output_state.pump",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 680,
        "wires": [
            [
                "b4b7c3ac04fa0d26"
            ]
        ]
    },
    {
        "id": "048745b05c4242c4",
        "type": "change",
        "z": "201ad97e962a1d7d",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output_state.aux_output",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 760,
        "wires": [
            [
                "6242809304c45573"
            ]
        ]
    },
    {
        "id": "76ce3f11da976273",
        "type": "ui_template",
        "z": "201ad97e962a1d7d",
        "group": "83e9ca27a8b9a1f0",
        "name": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<div style=\"font-weight: bold;\"><br>Outputs</div></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "ac48dbe589c405a0",
        "type": "ui_template",
        "z": "201ad97e962a1d7d",
        "group": "83e9ca27a8b9a1f0",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div style=\"font-weight: bold;\"><br>Inputs</div></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4cc95ca475d3d91d",
        "type": "ui_switch",
        "z": "201ad97e962a1d7d",
        "name": "",
        "label": "LFP Charger",
        "tooltip": "",
        "group": "83e9ca27a8b9a1f0",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "charger",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 320,
        "wires": [
            [
                "e742b038771c6432"
            ]
        ]
    },
    {
        "id": "ddea0f5a94a8c3a9",
        "type": "ui_led",
        "z": "201ad97e962a1d7d",
        "order": 8,
        "group": "83e9ca27a8b9a1f0",
        "width": 3,
        "height": 1,
        "label": " ",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "charger_led",
        "x": 510,
        "y": 360,
        "wires": []
    },
    {
        "id": "07718abd29a9b06e",
        "type": "change",
        "z": "201ad97e962a1d7d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output_state.charger",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 360,
        "wires": [
            [
                "ddea0f5a94a8c3a9"
            ]
        ]
    },
    {
        "id": "e742b038771c6432",
        "type": "link out",
        "z": "201ad97e962a1d7d",
        "d": true,
        "name": "hw_out",
        "mode": "link",
        "links": [
            "3c41044470a0259c"
        ],
        "x": 905,
        "y": 560,
        "wires": []
    },
    {
        "id": "824b9dcd48ddf953",
        "type": "ui_switch",
        "z": "201ad97e962a1d7d",
        "name": "",
        "label": "Fridge",
        "tooltip": "",
        "group": "83e9ca27a8b9a1f0",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "fridge",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 400,
        "wires": [
            [
                "e742b038771c6432"
            ]
        ]
    },
    {
        "id": "0e5d5c4a1e1db40d",
        "type": "ui_led",
        "z": "201ad97e962a1d7d",
        "order": 10,
        "group": "83e9ca27a8b9a1f0",
        "width": 3,
        "height": 1,
        "label": " ",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "fridge_led",
        "x": 500,
        "y": 440,
        "wires": []
    },
    {
        "id": "37e12edeac203aba",
        "type": "change",
        "z": "201ad97e962a1d7d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output_state.fridge",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 440,
        "wires": [
            [
                "0e5d5c4a1e1db40d"
            ]
        ]
    },
    {
        "id": "e02ecf77d8c96e56",
        "type": "ui_switch",
        "z": "201ad97e962a1d7d",
        "name": "",
        "label": "Inverter",
        "tooltip": "",
        "group": "83e9ca27a8b9a1f0",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "inverter",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 480,
        "wires": [
            [
                "e742b038771c6432"
            ]
        ]
    },
    {
        "id": "1deb8943db79a3cd",
        "type": "ui_led",
        "z": "201ad97e962a1d7d",
        "order": 12,
        "group": "83e9ca27a8b9a1f0",
        "width": 3,
        "height": 1,
        "label": " ",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "inverter_led",
        "x": 510,
        "y": 520,
        "wires": []
    },
    {
        "id": "49627c0467524bfb",
        "type": "change",
        "z": "201ad97e962a1d7d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output_state.inverter",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 520,
        "wires": [
            [
                "1deb8943db79a3cd"
            ]
        ]
    },
    {
        "id": "86d643818c891292",
        "type": "ui_switch",
        "z": "201ad97e962a1d7d",
        "name": "",
        "label": "Inverter Source",
        "tooltip": "",
        "group": "83e9ca27a8b9a1f0",
        "order": 13,
        "width": 4,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "battery_select",
        "topicType": "str",
        "style": "",
        "onvalue": "lead_battery",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "lfp_battery",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 520,
        "y": 560,
        "wires": [
            [
                "e742b038771c6432"
            ]
        ]
    },
    {
        "id": "aa51805e9a64dffa",
        "type": "change",
        "z": "201ad97e962a1d7d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output_state.inverter_source",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 600,
        "wires": [
            [
                "4db34e7c14326ab1"
            ]
        ]
    },
    {
        "id": "4db34e7c14326ab1",
        "type": "ui_text",
        "z": "201ad97e962a1d7d",
        "group": "83e9ca27a8b9a1f0",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "source select",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 510,
        "y": 600,
        "wires": []
    },
    {
        "id": "194e5ff3f157c393",
        "type": "ui_switch",
        "z": "201ad97e962a1d7d",
        "name": "",
        "label": "pump",
        "tooltip": "",
        "group": "83e9ca27a8b9a1f0",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "pump",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 640,
        "wires": [
            [
                "e742b038771c6432"
            ]
        ]
    },
    {
        "id": "9d3b5d1f802e49e5",
        "type": "ui_switch",
        "z": "201ad97e962a1d7d",
        "name": "",
        "label": "aux output",
        "tooltip": "",
        "group": "83e9ca27a8b9a1f0",
        "order": 17,
        "width": 4,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "aux_output",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 720,
        "wires": [
            [
                "e742b038771c6432"
            ]
        ]
    },
    {
        "id": "e7c6b0ccf31f425d",
        "type": "ui_chart",
        "z": "d36037ce242039a2",
        "name": "",
        "group": "80e6c085ce995358",
        "order": 1,
        "width": "21",
        "height": "14",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "853bfdc5756964e4",
        "type": "mysql",
        "z": "d36037ce242039a2",
        "mydb": "9accbd4c3bdcd845",
        "name": "",
        "x": 520,
        "y": 240,
        "wires": [
            [
                "52ad688b28d3a0f7"
            ]
        ]
    },
    {
        "id": "35f5f1d0493f8f2e",
        "type": "inject",
        "z": "d36037ce242039a2",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT p_panel, timestamp FROM mppt WHERE timestamp > now() - interval 1 day AND p_panel != 0;",
        "x": 350,
        "y": 240,
        "wires": [
            [
                "853bfdc5756964e4"
            ]
        ]
    },
    {
        "id": "ab1ff86af99705c8",
        "type": "debug",
        "z": "d36037ce242039a2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 420,
        "wires": []
    },
    {
        "id": "16d70efb38ae487f",
        "type": "inject",
        "z": "d36037ce242039a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "jsonata",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "e7c6b0ccf31f425d"
            ]
        ]
    },
    {
        "id": "08bf1c1e2b203060",
        "type": "change",
        "z": "d36037ce242039a2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "msg.payload.timestamp",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.p_panel",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "msg.payload.p_panel",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 240,
        "wires": [
            [
                "ab1ff86af99705c8",
                "e7c6b0ccf31f425d",
                "23f65999d387eaa2"
            ]
        ]
    },
    {
        "id": "52ad688b28d3a0f7",
        "type": "split",
        "z": "d36037ce242039a2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 670,
        "y": 240,
        "wires": [
            [
                "08bf1c1e2b203060"
            ]
        ]
    },
    {
        "id": "23f65999d387eaa2",
        "type": "debug",
        "z": "d36037ce242039a2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 500,
        "wires": []
    }
]