[
    {
        "id": "a7233230404c3289",
        "type": "tab",
        "label": "Hardware Layer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "726798b2ed2e9d52",
        "type": "tab",
        "label": "hardware test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "162cea04a51a0717",
        "type": "tab",
        "label": "busses",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "493e4b0fcbc7484f",
        "type": "tab",
        "label": "MPPT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "78b28997a4d07be2",
        "type": "tab",
        "label": "Fridge",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4e5a79410f858330",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a74bb25de5c78e26",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "eb3dc518d2e4c032",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "4e5a79410f858330",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "36d09c259c655fae",
        "type": "ui_group",
        "name": "fridge",
        "tab": "4e5a79410f858330",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bf5fc43d691b1bab",
        "type": "ui_group",
        "name": "Water System",
        "tab": "4e5a79410f858330",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1b844a8aa1ffbad4",
        "type": "ui_group",
        "name": "Inverter",
        "tab": "4e5a79410f858330",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8d207109f202f502",
        "type": "ui_tab",
        "name": "Fridge",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6c304982dc7231d9",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "8d207109f202f502",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "72a8d1b89999131f",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "8d207109f202f502",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bd4868f5f122cb15",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c0873438b4b186e4",
        "type": "ui_group",
        "name": "Outputs",
        "tab": "bd4868f5f122cb15",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7d05444eba45da17",
        "type": "ui_group",
        "name": "Inputs",
        "tab": "bd4868f5f122cb15",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "594a8a527370c352",
        "type": "serial-port",
        "serialport": "/dev/ttyS0",
        "serialbaud": "19200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "94b0afa1b11b1713",
        "type": "ui_tab",
        "name": "Hardware",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1af7c6782ddcc994",
        "type": "ui_group",
        "name": "Default",
        "tab": "94b0afa1b11b1713",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7ac90561cb0ad481",
        "type": "ui_group",
        "name": "Serial COM",
        "tab": "bd4868f5f122cb15",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1a5737cf1628b322",
        "type": "function",
        "z": "a7233230404c3289",
        "name": "",
        "func": "//turn on\nif(msg.payload){\n    return[{payload:true}, {payload:false}, null];\n}\n// turn off\nelse {\n    \n    return[null, {payload:false}, {payload:true}];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 140,
        "wires": [
            [
                "782769a562223dec"
            ],
            [
                "38537662831ea5ef"
            ],
            [
                "90613ed6f9f64d81"
            ]
        ]
    },
    {
        "id": "38537662831ea5ef",
        "type": "delay",
        "z": "a7233230404c3289",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "782769a562223dec",
                "90613ed6f9f64d81"
            ]
        ]
    },
    {
        "id": "782769a562223dec",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "fridge enable",
        "pin": "23",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 830,
        "y": 80,
        "wires": []
    },
    {
        "id": "90613ed6f9f64d81",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "fridge disable",
        "pin": "22",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 200,
        "wires": []
    },
    {
        "id": "b8e691216781847a",
        "type": "switch",
        "z": "a7233230404c3289",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "fridge",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "charger",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "inverter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "battery_select",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "aux_output",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 210,
        "y": 400,
        "wires": [
            [
                "1a5737cf1628b322"
            ],
            [
                "d57f3fed3232e6aa"
            ],
            [
                "be1fef61343d6adc"
            ],
            [
                "753d5c95ab39943d"
            ],
            [
                "9acc11c403c64e91"
            ],
            [
                "18ed1d456a74c5db"
            ]
        ]
    },
    {
        "id": "d57f3fed3232e6aa",
        "type": "function",
        "z": "a7233230404c3289",
        "name": "",
        "func": "//turn on\nif(msg.payload){\n    return[{payload:true}, {payload:false}, null];\n}\n// turn off\nelse {\n    \n    return[null, {payload:false}, {payload:true}];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 300,
        "wires": [
            [
                "76193dba3bc24373"
            ],
            [
                "065f9781f2fab846"
            ],
            [
                "88cc2e82349ad803"
            ]
        ]
    },
    {
        "id": "065f9781f2fab846",
        "type": "delay",
        "z": "a7233230404c3289",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 630,
        "y": 300,
        "wires": [
            [
                "76193dba3bc24373",
                "88cc2e82349ad803"
            ]
        ]
    },
    {
        "id": "be1fef61343d6adc",
        "type": "function",
        "z": "a7233230404c3289",
        "name": "",
        "func": "//turn on\nif(msg.payload){\n    return[{payload:true}, {payload:false}, null];\n}\n// turn off\nelse {\n    \n    return[null, {payload:false}, {payload:true}];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 460,
        "wires": [
            [
                "7ef21e46e8d661a8"
            ],
            [
                "bf34d6585b32494c"
            ],
            [
                "da7bf915a49c62e2"
            ]
        ]
    },
    {
        "id": "bf34d6585b32494c",
        "type": "delay",
        "z": "a7233230404c3289",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 630,
        "y": 460,
        "wires": [
            [
                "7ef21e46e8d661a8",
                "da7bf915a49c62e2"
            ]
        ]
    },
    {
        "id": "76193dba3bc24373",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "charger enable",
        "pin": "8",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 240,
        "wires": []
    },
    {
        "id": "88cc2e82349ad803",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "charger disable",
        "pin": "25",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 360,
        "wires": []
    },
    {
        "id": "7ef21e46e8d661a8",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "inverter enable",
        "pin": "18",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 400,
        "wires": []
    },
    {
        "id": "da7bf915a49c62e2",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "inverter disable",
        "pin": "17",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 840,
        "y": 520,
        "wires": []
    },
    {
        "id": "3c41044470a0259c",
        "type": "link in",
        "z": "a7233230404c3289",
        "name": "update_output_state",
        "links": [
            "7899d83bce6524ba",
            "2a419320b2911b9b",
            "d9d3a2237cf5255b",
            "b4c91e511d23ce73",
            "ae22c91926c1d4a2",
            "bec95a9c154191b7"
        ],
        "x": 105,
        "y": 400,
        "wires": [
            [
                "b8e691216781847a"
            ]
        ]
    },
    {
        "id": "74b2ecf88209a57e",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "inverter source sel",
        "pin": "24",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 850,
        "y": 580,
        "wires": []
    },
    {
        "id": "18ed1d456a74c5db",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "aux_output",
        "pin": "12",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 450,
        "y": 680,
        "wires": []
    },
    {
        "id": "9acc11c403c64e91",
        "type": "rpi-gpio out",
        "z": "a7233230404c3289",
        "name": "pump",
        "pin": "13",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 430,
        "y": 640,
        "wires": []
    },
    {
        "id": "753d5c95ab39943d",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "lfp_battery",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "lead_battery",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 580,
        "wires": [
            [
                "74b2ecf88209a57e"
            ]
        ]
    },
    {
        "id": "62b805e1a5e96579",
        "type": "rpi-gpio in",
        "z": "a7233230404c3289",
        "name": "switch_kitchen",
        "pin": "6",
        "intype": "up",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 240,
        "y": 860,
        "wires": [
            [
                "d7677ca1f297aef9"
            ]
        ]
    },
    {
        "id": "617471841b2f9af8",
        "type": "rpi-gpio in",
        "z": "a7233230404c3289",
        "name": "switch_living_room",
        "pin": "16",
        "intype": "up",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 250,
        "y": 900,
        "wires": [
            [
                "b930d4cdadfdab52"
            ]
        ]
    },
    {
        "id": "5cc0677001704f3a",
        "type": "rpi-gpio in",
        "z": "a7233230404c3289",
        "name": "aux_input_1",
        "pin": "20",
        "intype": "up",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 230,
        "y": 940,
        "wires": [
            [
                "8d808f0510ac1c56"
            ]
        ]
    },
    {
        "id": "6bc225a958d0b857",
        "type": "rpi-gpio in",
        "z": "a7233230404c3289",
        "name": "aux_input_2",
        "pin": "21",
        "intype": "up",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 230,
        "y": 980,
        "wires": [
            [
                "63ea6439ffa83c58"
            ]
        ]
    },
    {
        "id": "cead0d34d453b78b",
        "type": "comment",
        "z": "a7233230404c3289",
        "name": "Hardware Output",
        "info": "",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "70b061ebea3e6388",
        "type": "comment",
        "z": "a7233230404c3289",
        "name": "Hardware Input",
        "info": "",
        "x": 180,
        "y": 740,
        "wires": []
    },
    {
        "id": "675526f4c5306cda",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "input_state.switch_kitchen",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 860,
        "wires": [
            [
                "7538c7f00b6939fb"
            ]
        ]
    },
    {
        "id": "97d703f154174730",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "input_state.switch_living_room",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 900,
        "wires": [
            [
                "7538c7f00b6939fb"
            ]
        ]
    },
    {
        "id": "5a73c39ebc6ccb3f",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "input_state.aux_input_1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 940,
        "wires": [
            [
                "7538c7f00b6939fb"
            ]
        ]
    },
    {
        "id": "76ee4cc3b2a51557",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "input_state.aux_input_2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 980,
        "wires": [
            [
                "7538c7f00b6939fb"
            ]
        ]
    },
    {
        "id": "d7677ca1f297aef9",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "low active logic",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 860,
        "wires": [
            [
                "675526f4c5306cda"
            ]
        ]
    },
    {
        "id": "b930d4cdadfdab52",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "low active logic",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 900,
        "wires": [
            [
                "97d703f154174730"
            ]
        ]
    },
    {
        "id": "8d808f0510ac1c56",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "low active logic",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 940,
        "wires": [
            [
                "5a73c39ebc6ccb3f"
            ]
        ]
    },
    {
        "id": "63ea6439ffa83c58",
        "type": "change",
        "z": "a7233230404c3289",
        "name": "low active logic",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 980,
        "wires": [
            [
                "76ee4cc3b2a51557"
            ]
        ]
    },
    {
        "id": "7538c7f00b6939fb",
        "type": "link out",
        "z": "a7233230404c3289",
        "name": "input_state_trigger",
        "mode": "link",
        "links": [
            "9caacc1da750c852",
            "0efd4833ca974c55"
        ],
        "x": 865,
        "y": 920,
        "wires": []
    },
    {
        "id": "5fe75ecc4b0aaa4c",
        "type": "function",
        "z": "a7233230404c3289",
        "name": "init global objects",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n// init global object\nglobal.set(\"input_state\", {});",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "3c1ffe73b922b48d",
        "type": "ui_button",
        "z": "726798b2ed2e9d52",
        "name": "on_fridge",
        "group": "c0873438b4b186e4",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "fridge",
        "topicType": "str",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "2a419320b2911b9b",
                "85ed340cf1220ff7"
            ]
        ]
    },
    {
        "id": "5cbf47ddd2592a40",
        "type": "ui_button",
        "z": "726798b2ed2e9d52",
        "name": "off_fridge",
        "group": "c0873438b4b186e4",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "fridge",
        "topicType": "str",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "2a419320b2911b9b",
                "85ed340cf1220ff7"
            ]
        ]
    },
    {
        "id": "16e0cfdba48a053c",
        "type": "ui_button",
        "z": "726798b2ed2e9d52",
        "name": "on_charger",
        "group": "c0873438b4b186e4",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "charger",
        "topicType": "str",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "7899d83bce6524ba",
                "17749d30ea60cf3c"
            ]
        ]
    },
    {
        "id": "50b04ce704067397",
        "type": "ui_button",
        "z": "726798b2ed2e9d52",
        "name": "off_charger",
        "group": "c0873438b4b186e4",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "charger",
        "topicType": "str",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "7899d83bce6524ba",
                "17749d30ea60cf3c"
            ]
        ]
    },
    {
        "id": "707ff0e522ee5e51",
        "type": "ui_button",
        "z": "726798b2ed2e9d52",
        "name": "on_inverter",
        "group": "c0873438b4b186e4",
        "order": 8,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "inverter",
        "topicType": "str",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "d9d3a2237cf5255b",
                "1987a7444e3a15c0"
            ]
        ]
    },
    {
        "id": "324754eaad111fb8",
        "type": "ui_button",
        "z": "726798b2ed2e9d52",
        "name": "off_inverter",
        "group": "c0873438b4b186e4",
        "order": 9,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "inverter",
        "topicType": "str",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "d9d3a2237cf5255b",
                "1987a7444e3a15c0"
            ]
        ]
    },
    {
        "id": "b283bc9fdcb5ba87",
        "type": "ui_button",
        "z": "726798b2ed2e9d52",
        "name": "lfp battery",
        "group": "c0873438b4b186e4",
        "order": 11,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "LFP",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "lfp_battery",
        "payloadType": "str",
        "topic": "battery_select",
        "topicType": "str",
        "x": 140,
        "y": 460,
        "wires": [
            [
                "66df1dcf38a45c40",
                "b4c91e511d23ce73"
            ]
        ]
    },
    {
        "id": "f8df2460124aeee3",
        "type": "ui_button",
        "z": "726798b2ed2e9d52",
        "name": "lead battery",
        "group": "c0873438b4b186e4",
        "order": 12,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Lead",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "lead_battery",
        "payloadType": "str",
        "topic": "battery_select",
        "topicType": "str",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "66df1dcf38a45c40",
                "b4c91e511d23ce73"
            ]
        ]
    },
    {
        "id": "66df1dcf38a45c40",
        "type": "ui_text",
        "z": "726798b2ed2e9d52",
        "group": "c0873438b4b186e4",
        "order": 10,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "inverter source select: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 440,
        "y": 500,
        "wires": []
    },
    {
        "id": "3e360aa06b0897a1",
        "type": "ui_switch",
        "z": "726798b2ed2e9d52",
        "name": "pump switch",
        "label": "pump switch",
        "tooltip": "",
        "group": "c0873438b4b186e4",
        "order": 13,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "pump",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "1cc9c852a6ae4447",
                "ae22c91926c1d4a2"
            ]
        ]
    },
    {
        "id": "1cc9c852a6ae4447",
        "type": "ui_led",
        "z": "726798b2ed2e9d52",
        "order": 14,
        "group": "c0873438b4b186e4",
        "width": "2",
        "height": "1",
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led pump",
        "x": 400,
        "y": 600,
        "wires": []
    },
    {
        "id": "e3098072c88e0663",
        "type": "ui_led",
        "z": "726798b2ed2e9d52",
        "order": 16,
        "group": "c0873438b4b186e4",
        "width": "2",
        "height": "1",
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led aux output",
        "x": 420,
        "y": 680,
        "wires": []
    },
    {
        "id": "2286f91378141185",
        "type": "ui_switch",
        "z": "726798b2ed2e9d52",
        "name": "aux output switch",
        "label": "aux output switch",
        "tooltip": "",
        "group": "c0873438b4b186e4",
        "order": 15,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "aux_output",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 110,
        "y": 660,
        "wires": [
            [
                "e3098072c88e0663",
                "bec95a9c154191b7"
            ]
        ]
    },
    {
        "id": "7899d83bce6524ba",
        "type": "link out",
        "z": "726798b2ed2e9d52",
        "name": "charger",
        "mode": "link",
        "links": [
            "3c41044470a0259c"
        ],
        "x": 365,
        "y": 60,
        "wires": []
    },
    {
        "id": "17749d30ea60cf3c",
        "type": "ui_led",
        "z": "726798b2ed2e9d52",
        "order": 1,
        "group": "c0873438b4b186e4",
        "width": "0",
        "height": "0",
        "label": "charger relay: ",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led charger",
        "x": 410,
        "y": 100,
        "wires": []
    },
    {
        "id": "85ed340cf1220ff7",
        "type": "ui_led",
        "z": "726798b2ed2e9d52",
        "order": 4,
        "group": "c0873438b4b186e4",
        "width": "0",
        "height": "0",
        "label": "fridge relay: ",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led fridge",
        "x": 400,
        "y": 240,
        "wires": []
    },
    {
        "id": "1987a7444e3a15c0",
        "type": "ui_led",
        "z": "726798b2ed2e9d52",
        "order": 7,
        "group": "c0873438b4b186e4",
        "width": "0",
        "height": "0",
        "label": "inverter relay: ",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led inverter",
        "x": 410,
        "y": 380,
        "wires": []
    },
    {
        "id": "2a419320b2911b9b",
        "type": "link out",
        "z": "726798b2ed2e9d52",
        "name": "fridge",
        "mode": "link",
        "links": [
            "3c41044470a0259c"
        ],
        "x": 365,
        "y": 200,
        "wires": []
    },
    {
        "id": "d9d3a2237cf5255b",
        "type": "link out",
        "z": "726798b2ed2e9d52",
        "name": "inverter",
        "mode": "link",
        "links": [
            "3c41044470a0259c"
        ],
        "x": 365,
        "y": 340,
        "wires": []
    },
    {
        "id": "b4c91e511d23ce73",
        "type": "link out",
        "z": "726798b2ed2e9d52",
        "name": "inverter",
        "mode": "link",
        "links": [
            "3c41044470a0259c"
        ],
        "x": 355,
        "y": 460,
        "wires": []
    },
    {
        "id": "ae22c91926c1d4a2",
        "type": "link out",
        "z": "726798b2ed2e9d52",
        "name": "inverter",
        "mode": "link",
        "links": [
            "3c41044470a0259c"
        ],
        "x": 355,
        "y": 560,
        "wires": []
    },
    {
        "id": "bec95a9c154191b7",
        "type": "link out",
        "z": "726798b2ed2e9d52",
        "name": "inverter",
        "mode": "link",
        "links": [
            "3c41044470a0259c"
        ],
        "x": 355,
        "y": 640,
        "wires": []
    },
    {
        "id": "2b049ba833d7d548",
        "type": "ui_led",
        "z": "726798b2ed2e9d52",
        "order": 4,
        "group": "7d05444eba45da17",
        "width": 0,
        "height": 0,
        "label": "aux 2:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "aux 2",
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "692e51ec0eb8bdef",
        "type": "ui_led",
        "z": "726798b2ed2e9d52",
        "order": 1,
        "group": "7d05444eba45da17",
        "width": 0,
        "height": 0,
        "label": "switch kitchen:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "switch kitchen",
        "x": 920,
        "y": 60,
        "wires": []
    },
    {
        "id": "53e4a4d5e2bfd352",
        "type": "ui_led",
        "z": "726798b2ed2e9d52",
        "order": 2,
        "group": "7d05444eba45da17",
        "width": 0,
        "height": 0,
        "label": "switch living room:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "switch living room",
        "x": 930,
        "y": 100,
        "wires": []
    },
    {
        "id": "33db125d2bece307",
        "type": "ui_led",
        "z": "726798b2ed2e9d52",
        "order": 3,
        "group": "7d05444eba45da17",
        "width": 0,
        "height": 0,
        "label": "aux 1:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "aux 1",
        "x": 890,
        "y": 140,
        "wires": []
    },
    {
        "id": "9797848ca5aa4a5d",
        "type": "change",
        "z": "726798b2ed2e9d52",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input_state.switch_kitchen",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 60,
        "wires": [
            [
                "692e51ec0eb8bdef"
            ]
        ]
    },
    {
        "id": "b9db4daba5813f0f",
        "type": "change",
        "z": "726798b2ed2e9d52",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input_state.switch_living_room",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 100,
        "wires": [
            [
                "53e4a4d5e2bfd352"
            ]
        ]
    },
    {
        "id": "d0bd28cf4bf97030",
        "type": "change",
        "z": "726798b2ed2e9d52",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input_state.aux_input_1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 140,
        "wires": [
            [
                "33db125d2bece307"
            ]
        ]
    },
    {
        "id": "7aa4a6c113890770",
        "type": "change",
        "z": "726798b2ed2e9d52",
        "name": "store global var",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input_state.aux_input_2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 180,
        "wires": [
            [
                "2b049ba833d7d548"
            ]
        ]
    },
    {
        "id": "0efd4833ca974c55",
        "type": "link in",
        "z": "726798b2ed2e9d52",
        "name": "",
        "links": [
            "7538c7f00b6939fb"
        ],
        "x": 555,
        "y": 140,
        "wires": [
            [
                "9797848ca5aa4a5d",
                "b9db4daba5813f0f",
                "d0bd28cf4bf97030",
                "7aa4a6c113890770"
            ]
        ]
    },
    {
        "id": "8bdc0ad591b59ea7",
        "type": "debug",
        "z": "162cea04a51a0717",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 400,
        "wires": []
    },
    {
        "id": "4ad8306cc0f623a2",
        "type": "inject",
        "z": "162cea04a51a0717",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "036150936425b19a",
                "055da7845f57ef57"
            ]
        ]
    },
    {
        "id": "036150936425b19a",
        "type": "i2c in",
        "z": "162cea04a51a0717",
        "name": "",
        "busno": "1",
        "address": "105",
        "command": "16",
        "count": "3",
        "x": 310,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a0b92734684d1f04",
        "type": "function",
        "z": "162cea04a51a0717",
        "name": "",
        "func": "\nvar adc_val = msg.payload[1]+ (msg.payload[0]<<8);\nvar voltage_val = Math.round(adc_val);\nmsg.payload = adc_val;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "31ef7c8c1c70049b",
        "type": "i2c scan",
        "z": "162cea04a51a0717",
        "name": "",
        "busno": "1",
        "x": 280,
        "y": 360,
        "wires": [
            [
                "8bdc0ad591b59ea7"
            ],
            []
        ]
    },
    {
        "id": "47cdcb0f6df16690",
        "type": "inject",
        "z": "162cea04a51a0717",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "31ef7c8c1c70049b"
            ]
        ]
    },
    {
        "id": "055da7845f57ef57",
        "type": "delay",
        "z": "162cea04a51a0717",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "6861e23f2f51feed"
            ]
        ]
    },
    {
        "id": "6861e23f2f51feed",
        "type": "i2c in",
        "z": "162cea04a51a0717",
        "name": "",
        "busno": "1",
        "address": "105",
        "command": "16",
        "count": "3",
        "x": 450,
        "y": 260,
        "wires": [
            [
                "8bdc0ad591b59ea7"
            ]
        ]
    },
    {
        "id": "7070617653022f14",
        "type": "serial in",
        "z": "162cea04a51a0717",
        "d": true,
        "name": "",
        "serial": "594a8a527370c352",
        "x": 100,
        "y": 500,
        "wires": [
            [
                "14076d51a5eb81bc"
            ]
        ]
    },
    {
        "id": "4f606de3ef1f3334",
        "type": "debug",
        "z": "162cea04a51a0717",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 500,
        "wires": []
    },
    {
        "id": "14076d51a5eb81bc",
        "type": "join",
        "z": "162cea04a51a0717",
        "d": true,
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "21",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 250,
        "y": 500,
        "wires": [
            [
                "e816023dd76585b7"
            ]
        ]
    },
    {
        "id": "e816023dd76585b7",
        "type": "delay",
        "z": "162cea04a51a0717",
        "d": true,
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 500,
        "wires": [
            [
                "4f606de3ef1f3334"
            ]
        ]
    },
    {
        "id": "45cb4c50f5f186b6",
        "type": "serial request",
        "z": "162cea04a51a0717",
        "name": "",
        "serial": "594a8a527370c352",
        "x": 530,
        "y": 620,
        "wires": [
            [
                "e74e20aef28e16a9"
            ]
        ]
    },
    {
        "id": "ca27c47937e7c4eb",
        "type": "ui_text_input",
        "z": "162cea04a51a0717",
        "name": "",
        "label": "enter HEX",
        "tooltip": "",
        "group": "7ac90561cb0ad481",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 140,
        "y": 620,
        "wires": [
            [
                "dd17b34a371b0aa1",
                "15099b162f16fa44"
            ]
        ]
    },
    {
        "id": "c91ee92a56272905",
        "type": "ui_text",
        "z": "162cea04a51a0717",
        "group": "7ac90561cb0ad481",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Command:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 930,
        "y": 580,
        "wires": []
    },
    {
        "id": "dd17b34a371b0aa1",
        "type": "function",
        "z": "162cea04a51a0717",
        "name": "checksum builder",
        "func": "var string = msg.payload;\n\n// checksum calculation\n//split string in bytes array\nvar string_array = string.substring(1).match(/.{1,2}/g);\nstring_array.push(string.substring(0,1));\n// add every bytes togheter\nvar sum = 0;\nfor(var i=0; i < string_array.length; i++){\n    sum = sum + parseInt(string_array[i], 16);\n}\n// subtract sum from 0x55 and convert it to string\nvar checksum = ((((85 - sum) % 256) + 256) % 256).toString(16).toUpperCase();\n\n\nmsg.payload = ':' + string + checksum + '\\n';\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 620,
        "wires": [
            [
                "45cb4c50f5f186b6"
            ]
        ]
    },
    {
        "id": "e74e20aef28e16a9",
        "type": "function",
        "z": "162cea04a51a0717",
        "name": "checksum tester",
        "func": "// first output: command value\n// second output: message\n// third output: true if data is corrupted\n\nvar string = msg.payload;\n\n// take out start and stop signs (: and \\n)\nstring = string.substring(11, string.length-1);\n// get checksum (last byte)\nvar checksum = string.substring(string.length-2);\n\n// checksum calculation\n//split string in bytes array\nvar string_array = string.substring(1, string.length-2).match(/.{1,2}/g);\nstring_array.push(string.substring(0,1));\n// add every bytes togheter\nvar sum = 0;\nfor(var i=0; i < string_array.length; i++){\n    sum = sum + parseInt(string_array[i], 16);\n}\n// subtract sum from 0x55 and convert it to string all caps\nvar myChecksum = ((((85 - sum) % 256) + 256) % 256).toString(16).toUpperCase();\n\n// check data integrity\nvar isDataCorrupted;\nif(myChecksum == checksum){\n    // command\n    var msg1 = {payload: string.substring(0,1)};\n    // data\n    var msg2 = {payload: string.substring(1, string.length-2)};\n    return[msg1, msg2, null];\n}\nelse {\n    return[null, null, {payload: true}];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 620,
        "wires": [
            [
                "c91ee92a56272905"
            ],
            [
                "e95c799fefc1d442"
            ],
            [
                "0d9ae756e8a7c710"
            ]
        ]
    },
    {
        "id": "e95c799fefc1d442",
        "type": "ui_text",
        "z": "162cea04a51a0717",
        "group": "7ac90561cb0ad481",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Data:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 910,
        "y": 620,
        "wires": []
    },
    {
        "id": "0d9ae756e8a7c710",
        "type": "ui_led",
        "z": "162cea04a51a0717",
        "order": 2,
        "group": "7ac90561cb0ad481",
        "width": 0,
        "height": 0,
        "label": "Data corrupted",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "",
        "x": 910,
        "y": 660,
        "wires": []
    },
    {
        "id": "15099b162f16fa44",
        "type": "change",
        "z": "162cea04a51a0717",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 680,
        "wires": [
            [
                "ca27c47937e7c4eb"
            ]
        ]
    },
    {
        "id": "f3ef3446055ae61d",
        "type": "comment",
        "z": "162cea04a51a0717",
        "name": "Standard text mode",
        "info": "",
        "x": 130,
        "y": 460,
        "wires": []
    },
    {
        "id": "041052e740fb61ab",
        "type": "comment",
        "z": "162cea04a51a0717",
        "name": "Hex mode",
        "info": "",
        "x": 100,
        "y": 580,
        "wires": []
    },
    {
        "id": "522a28de03c194b1",
        "type": "serial request",
        "z": "493e4b0fcbc7484f",
        "name": "MPPT request",
        "serial": "594a8a527370c352",
        "x": 560,
        "y": 180,
        "wires": [
            [
                "de36f2d1d965bb8e"
            ]
        ]
    },
    {
        "id": "b60a37816360662b",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "name": "checksum builder",
        "func": "var string = msg.payload;\n\n// checksum calculation\n//split string in bytes array\nvar string_array = string.substring(1).match(/.{1,2}/g);\nstring_array.push(string.substring(0,1));\n// add every bytes togheter\nvar sum = 0;\nfor(var i=0; i < string_array.length; i++){\n    sum = sum + parseInt(string_array[i], 16);\n}\n// subtract sum from 0x55 and convert it to string\nvar checksum = ((((85 - sum) % 256) + 256) % 256).toString(16).toUpperCase();\n\n\nmsg.payload = ':' + string + checksum + '\\n';\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 180,
        "wires": [
            [
                "522a28de03c194b1"
            ]
        ]
    },
    {
        "id": "de36f2d1d965bb8e",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "name": "checksum tester",
        "func": "// first output: command value\n// second output: message\n// third output: true if data is corrupted\n\nvar string = msg.payload.toString();\n//msg.payload = string;\n//return[null, msg, null];\n\n// take out start and stop signs (: and \\n)\nstring = string.substring(11, string.length-1);\n// get checksum (last byte)\nvar checksum = string.substring(string.length-2);\n\n// checksum calculation\n//split string in bytes array\nvar string_array = string.substring(1, string.length-2).match(/.{1,2}/g);\nstring_array.push(string.substring(0,1));\n// add every bytes togheter\nvar sum = 0;\nfor(var i=0; i < string_array.length; i++){\n    sum = sum + parseInt(string_array[i], 16);\n}\n// subtract sum from 0x55 and convert it to string all caps\nvar myChecksum = ((((85 - sum) % 256) + 256) % 256).toString(16).toUpperCase();\n\n// check data integrity\nvar isDataCorrupted;\nif(myChecksum == checksum){\n    // command\n    var msg1 = {payload: string.substring(0,1)};\n    // data\n    var msg2 = {payload: string.substring(1, string.length-2)};\n    return[msg1, msg2, null];\n}\nelse {\n    return[null, null, {payload: true}];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 180,
        "wires": [
            [],
            [
                "a805575efa3fd140"
            ],
            []
        ]
    },
    {
        "id": "79ef0823a6b283f4",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "name": "SOC calculator",
        "func": "const data = msg.payload;\nconst max_capacity = 384; //Wh (12.5V * 30Ah)\nconst energy_yield = data.energy_yield*10; //Wh\nconst energy_consumed = data.energy_consumed*10;   //Wh\nvar offset_energy = context.get(\"offset_energy\") || max_capacity;\nvar today_number = flow.get(\"today_number\") || data.day_sequence_number;\n\n// if its a new day\nif(today_number+1 == data.day_sequence_number){\n    today_number = data.day_sequence_number;\n    context.set(\"offset_energy\", (context.get(\"tomorrow_offset_energy\") || offset_energy));\n}\n\n// if battery fully charged (float mode)\nif(flow.get(\"mppt_broadcast\").CS == '5'){\n    context.set(\"offset_energy\", (max_capacity - energy_yield + energy_consumed));\n}\n\nvar left_energy = offset_energy + energy_yield - energy_consumed;\n\n// adjust offset if error detected (SOC > 100%)\nif(left_energy > max_capacity){\n    offset_energy = max_capacity - energy_yield + energy_consumed;\n    context.set(\"offset_energy\", offset_energy);\n    left_energy = offset_energy + energy_yield - energy_consumed;\n}\n// SOC < 0%\nelse if(left_energy < 0){\n    context.set(\"offset_energy\", (0 - energy_yield + energy_consumed));\n    left_energy = 0;\n}\n\ncontext.set(\"tomorrow_offset_energy\", left_energy);\n\nvar soc = left_energy * 100 / max_capacity;\nmsg.payload = soc;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 340,
        "wires": [
            [
                "2fd94ec572823321"
            ]
        ]
    },
    {
        "id": "4ba88c3a7bf4d7cf",
        "type": "inject",
        "z": "493e4b0fcbc7484f",
        "name": "request today history",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "7501000",
        "payloadType": "str",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "b60a37816360662b"
            ]
        ]
    },
    {
        "id": "a805575efa3fd140",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "name": "data parser",
        "func": "var raw_data = msg.payload;\nvar data = {\n    energy_yield:           [8, 16],    //*10 to Wh\n    energy_consumed:        [16, 24],   //*10 to Wh\n    battery_voltage_max:    [24, 28],   //*10 to mV\n    battery_voltage_min:    [28, 32],   //*10 to mV\n    error_database:         [32, 34],\n    error_0:                [34, 36],\n    error_1:                [36, 38],\n    error_2:                [38, 40],\n    error_3:                [40, 42],\n    time_bulk:              [42, 46],   // minutes\n    time_absorpion:         [46, 50],   // minutes\n    time_float:             [50, 54],   // minutes\n    power_max:              [54, 62],   // in W\n    battery_current_max:    [62, 66],   //*100 in mA\n    panel_voltage_max:      [66, 70],   //*10 in mV\n    day_sequence_number:    [70, 74]\n};\n// decoding routine\nfor(const property in data){\n    // save substring of interest in array of bytes\n    var byte_arr = raw_data.substring(data[property][0], data[property][1]).match(/.{1,2}/g);\n    // invert low nibble with high nibble\n    var inverted_arr = [];\n    for(var i=byte_arr.length-1; i>=0; i--){\n        inverted_arr.push(byte_arr[i]);\n    }\n    // join array of bytes into string then parse string into dec value\n    data[property] = parseInt(inverted_arr.join(''), 16);\n}\n\n\nflow.set(\"today_history\", data);\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 340,
        "wires": [
            [
                "79ef0823a6b283f4"
            ]
        ]
    },
    {
        "id": "d860b3b2bc4b6c26",
        "type": "inject",
        "z": "493e4b0fcbc7484f",
        "name": "request yesterday  history",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "7511000",
        "payloadType": "str",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "b60a37816360662b"
            ]
        ]
    },
    {
        "id": "bf2fda8594cf902e",
        "type": "serial in",
        "z": "493e4b0fcbc7484f",
        "name": "MPPT broadcast",
        "serial": "594a8a527370c352",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "a5ac2984b26adfaf"
            ]
        ]
    },
    {
        "id": "e24b696b89968d8e",
        "type": "function",
        "z": "493e4b0fcbc7484f",
        "name": "broadcast parser",
        "func": "var string = msg.payload;\nvar data = {};\n\n// reorder and standardize data string\nstring = string.substring(string.indexOf(\"PID\"), string.indexOf(\"PID\", string.indexOf(\"PID\")+1));\n//calculate checksum for data integrity\nvar checksum = 0;\nvar bit_stream = new Buffer(string);\nfor(const element of bit_stream) {\n   checksum = (checksum + element) & 255; /* Take modulo 256 in account */\n}\nif(checksum == 0){\n    // remove checksum\n    string = string.substring(0, string.indexOf(\"Checksum\")-1);\n    // convert string to array\n    var array = string.split('\\n');\n    // convert array of string into data object\n    for(const element of array){\n        var property_name = element.substring(0, element.indexOf('\\t'));\n        var property_value = element.substring(element.indexOf('\\t')+1, element.length-1);\n        data[property_name] = property_value;\n    }\n    // update flow object with new data\n    flow.set(\"mppt_broadcast\", data);\n    return [{payload: data} ,null];\n}\nelse {\n    // data corrucped flag\n    return [null, {payload: true}];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 40,
        "wires": [
            [],
            [
                "e171066b96771584"
            ]
        ]
    },
    {
        "id": "e171066b96771584",
        "type": "debug",
        "z": "493e4b0fcbc7484f",
        "name": "data corrupted",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 40,
        "wires": []
    },
    {
        "id": "a5ac2984b26adfaf",
        "type": "join",
        "z": "493e4b0fcbc7484f",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "40",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 270,
        "y": 40,
        "wires": [
            [
                "e24b696b89968d8e"
            ]
        ]
    },
    {
        "id": "2fd94ec572823321",
        "type": "ui_gauge",
        "z": "493e4b0fcbc7484f",
        "name": "",
        "group": "7ac90561cb0ad481",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "SOC",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff2600",
            "#000000",
            "#00f900"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 710,
        "y": 340,
        "wires": []
    },
    {
        "id": "5f1bf2f0ddf26c61",
        "type": "ui_ui_control",
        "z": "493e4b0fcbc7484f",
        "name": "",
        "events": "connect",
        "x": 100,
        "y": 240,
        "wires": [
            [
                "faab1e33cd83d2ce"
            ]
        ]
    },
    {
        "id": "faab1e33cd83d2ce",
        "type": "change",
        "z": "493e4b0fcbc7484f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "7501000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 240,
        "wires": [
            [
                "b60a37816360662b"
            ]
        ]
    },
    {
        "id": "08c5c713b62ce9a6",
        "type": "ui_gauge",
        "z": "78b28997a4d07be2",
        "name": "",
        "group": "6c304982dc7231d9",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Fridge Temperature",
        "label": "C°",
        "format": "{{value}}",
        "min": "-20",
        "max": "20",
        "colors": [
            "#00fdff",
            "#00f900",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 810,
        "y": 500,
        "wires": []
    },
    {
        "id": "b5c43be785249085",
        "type": "ui_dropdown",
        "z": "78b28997a4d07be2",
        "name": "",
        "label": "Fridge Algorithm",
        "tooltip": "",
        "place": "always off",
        "group": "6c304982dc7231d9",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Winter",
                "value": "winter",
                "type": "str"
            },
            {
                "label": "summer",
                "value": "summer",
                "type": "str"
            },
            {
                "label": "battery life",
                "value": "battery life",
                "type": "str"
            },
            {
                "label": "always on",
                "value": "always on",
                "type": "str"
            },
            {
                "label": "always off",
                "value": "always off",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "51ed073e7b2f0fd3",
                "9342b1041f1f9ae3"
            ]
        ]
    },
    {
        "id": "2a87cc921872582f",
        "type": "ui_led",
        "z": "78b28997a4d07be2",
        "order": 3,
        "group": "6c304982dc7231d9",
        "width": "6",
        "height": "2",
        "label": "Fridge Compressor Status",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ffa500",
                "value": "error",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#000000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "Fridge Compressor Status",
        "x": 1600,
        "y": 260,
        "wires": []
    },
    {
        "id": "3313eca393a477fb",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "always off",
        "func": "var algorithm=flow.get('algorithm') || 0;\n\nif(algorithm == \"always off\"){\n    msg.payload = false;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 200,
        "wires": [
            [
                "1447651ddc652524"
            ]
        ]
    },
    {
        "id": "6dd922fb88a0058b",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "always on",
        "func": "var algorithm=flow.get('algorithm') || 0;\n\nif(algorithm == \"always on\"){\n    msg.payload = true;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 240,
        "wires": [
            [
                "1447651ddc652524"
            ]
        ]
    },
    {
        "id": "883ff0dabf8e8aaa",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "winter algorithm",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 280,
        "wires": [
            [
                "1447651ddc652524"
            ]
        ]
    },
    {
        "id": "1966728c9236e2bb",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "summer algorithm",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 320,
        "wires": [
            [
                "1447651ddc652524"
            ]
        ]
    },
    {
        "id": "a0bbb818d234da39",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "battery life algorithm",
        "func": "var algorithm=flow.get('algorithm') || 0;\n\nif(algorithm == \"battery life\"){\n\n    var lfp_soc = global.get('lfp_soc') || 0;\n    var fridge_temp = flow.get('fridge_temp') || 0;\n    \n    const UPPER_FRIDGE_TEMP_THRESHOLD = 10;\n    const LOWER_FRIDGE_TEMP_THRESHOLD = 6;\n    const UPPER_LFP_SOC_THRESHOLD = 35;\n    const LOWER_LFP_SOC_THRESHOLD = 20;\n    \n    if(lfp_soc >= UPPER_LFP_SOC_THRESHOLD && fridge_temp >= UPPER_FRIDGE_TEMP_THRESHOLD) {\n        msg.payload = true;\n        return msg;\n    }\n    else if(lfp_soc < LOWER_LFP_SOC_THRESHOLD) {\n        flow.set('low_soc', true);\n        msg.payload = false;\n        return msg;\n    }\n    else if(fridge_temp < LOWER_FRIDGE_TEMP_THRESHOLD) {\n        msg.payload = false;\n        return msg;\n    }\n    else {\n        msg.payload = Boolean(global.get('fridge_status') || 0);\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 360,
        "wires": [
            [
                "1447651ddc652524"
            ]
        ]
    },
    {
        "id": "824207ada65b92c0",
        "type": "link in",
        "z": "78b28997a4d07be2",
        "name": "fridge temp",
        "links": [
            "8a9c33c902845731"
        ],
        "x": 225,
        "y": 380,
        "wires": [
            [
                "cdfe4e7906432fc7"
            ]
        ]
    },
    {
        "id": "9342b1041f1f9ae3",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "algorithm",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "59f6bbaa386ef7db"
            ]
        ]
    },
    {
        "id": "d549bd85a95f082e",
        "type": "comment",
        "z": "78b28997a4d07be2",
        "name": "fridge temp Interrupt",
        "info": "",
        "x": 110,
        "y": 380,
        "wires": []
    },
    {
        "id": "fc70ec1c8f6bc9d5",
        "type": "link out",
        "z": "78b28997a4d07be2",
        "name": "fridge motor",
        "mode": "link",
        "links": [
            "1ee8a0ddf5ec7130"
        ],
        "x": 1355,
        "y": 300,
        "wires": []
    },
    {
        "id": "0e2de6308da39b4e",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "initialize variables",
        "func": "",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nif(flow.get('algorithm') == undefined){\n    flow.set('algorithm', \"always off\");\n}",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 120,
        "wires": []
    },
    {
        "id": "51ed073e7b2f0fd3",
        "type": "link call",
        "z": "78b28997a4d07be2",
        "name": "temp update trigger",
        "links": [
            "dcb33a114f4794bd"
        ],
        "timeout": "30",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "59f6bbaa386ef7db"
            ]
        ]
    },
    {
        "id": "1447651ddc652524",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fridge_status",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 280,
        "wires": [
            [
                "fc70ec1c8f6bc9d5",
                "66293dd11ebae5b0"
            ]
        ]
    },
    {
        "id": "e82eeaba3ef35cbd",
        "type": "link in",
        "z": "78b28997a4d07be2",
        "name": "SOC IN",
        "links": [
            "10890d3192203f91"
        ],
        "x": 225,
        "y": 340,
        "wires": [
            [
                "59f6bbaa386ef7db"
            ]
        ]
    },
    {
        "id": "cdfe4e7906432fc7",
        "type": "change",
        "z": "78b28997a4d07be2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fridge_temp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 380,
        "wires": [
            [
                "59f6bbaa386ef7db",
                "08c5c713b62ce9a6"
            ]
        ]
    },
    {
        "id": "3036db57fd8806a8",
        "type": "comment",
        "z": "78b28997a4d07be2",
        "name": "LFP SOC Interrupt",
        "info": "",
        "x": 110,
        "y": 340,
        "wires": []
    },
    {
        "id": "59f6bbaa386ef7db",
        "type": "switch",
        "z": "78b28997a4d07be2",
        "name": "",
        "property": "algorithm",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "always off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "always on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "winter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "summer",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "battery life",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 590,
        "y": 280,
        "wires": [
            [
                "3313eca393a477fb"
            ],
            [
                "6dd922fb88a0058b"
            ],
            [
                "883ff0dabf8e8aaa"
            ],
            [
                "1966728c9236e2bb"
            ],
            [
                "a0bbb818d234da39"
            ]
        ]
    },
    {
        "id": "0c055e683c279be6",
        "type": "comment",
        "z": "78b28997a4d07be2",
        "name": "Fridge compressor",
        "info": "",
        "x": 1490,
        "y": 300,
        "wires": []
    },
    {
        "id": "66293dd11ebae5b0",
        "type": "function",
        "z": "78b28997a4d07be2",
        "name": "",
        "func": "if(flow.get('low_soc') == true) {\n    msg.payload = \"error\";\n    flow.set('low_soc', undefined);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 260,
        "wires": [
            [
                "2a87cc921872582f",
                "27950db3a8645c87"
            ]
        ]
    },
    {
        "id": "27950db3a8645c87",
        "type": "debug",
        "z": "78b28997a4d07be2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 120,
        "wires": []
    }
]